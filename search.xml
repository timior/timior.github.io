<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Centos7 安装Ansible]]></title>
    <url>%2Flogs%2Fcentos7_install_ansible%2F</url>
    <content type="text"><![CDATA[Centos7 64位 在线、离线安装Ansible系统环境系统：Centos7 64位rpm在线安装Ansible1234567# 安装EPEL源 yum install wgetwget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpmrpm -ivh epel-release-latest-7.noarch.rpm# 安装ansibleyum install ansiblerpm离线安装Ansible由于没有直观的网址下载rpm包，因此最简单的方法是新建一台最小化安装的CentOs7虚拟机，之后修改/etc/yum.conf，将keepcache=0修改为keepcache=1，之后使用在线安装的方式安装ansible，在cash目录：cachedir=/var/cache/yum/下寻找所有的依赖包。根据在线安装的屏显顺序手工安装rpm包在线安装的屏显信息123456789101112131415161718192021Running transaction警告：RPM 数据库已被非 yum 程序修改。 正在安装 : python-six-1.9.0-2.el7.noarch 1/19 正在安装 : python2-ecdsa-0.13-4.el7.noarch 2/19 正在安装 : sshpass-1.06-1.el7.x86_64 3/19 正在安装 : python-babel-0.9.6-8.el7.noarch 4/19 正在安装 : libtommath-0.42.0-5.el7.x86_64 5/19 正在安装 : libtomcrypt-1.17-25.el7.x86_64 6/19 正在安装 : python2-crypto-2.6.1-13.el7.x86_64 7/19 正在安装 : python2-paramiko-1.16.1-2.el7.noarch 8/19 正在安装 : python-backports-1.0-8.el7.x86_64 9/19 正在安装 : python-backports-ssl_match_hostname-3.4.0.2-4.el7.noarch 10/19 正在安装 : python-setuptools-0.9.8-4.el7.noarch 11/19 正在安装 : python2-pyasn1-0.1.9-7.el7.noarch 12/19 正在安装 : python-keyczar-0.71c-2.el7.noarch 13/19 正在安装 : python-httplib2-0.7.7-3.el7.noarch 14/19 正在安装 : python-markupsafe-0.11-10.el7.x86_64 15/19 正在安装 : python-jinja2-2.7.2-2.el7.noarch 16/19 正在安装 : libyaml-0.1.4-11.el7_0.x86_64 17/19 正在安装 : PyYAML-3.10-11.el7.x86_64 18/19 正在安装 : ansible-2.3.1.0-1.el7.noarch 19/19离线安装脚本如下：1234567891011121314151617181920# 安装包名称即在上一步安装名称后加.rpm后缀（建议使用列编辑器编写安装脚本） rpm -ivh python-six-1.9.0-2.el7.noarch.rpmrpm -ivh python2-ecdsa-0.13-4.el7.noarch.rpmrpm -ivh sshpass-1.06-1.el7.x86_64.rpmrpm -ivh python-babel-0.9.6-8.el7.noarch.rpmrpm -ivh libtommath-0.42.0-5.el7.x86_64.rpmrpm -ivh libtomcrypt-1.17-25.el7.x86_64.rpmrpm -ivh python2-crypto-2.6.1-13.el7.x86_64.rpmrpm -ivh python2-paramiko-1.16.1-2.el7.noarch.rpmrpm -ivh python-backports-1.0-8.el7.x86_64.rpmrpm -ivh python-backports-ssl_match_hostname-3.4.0.2-4.el7.noarch.rpmrpm -ivh python-setuptools-0.9.8-4.el7.noarch.rpmrpm -ivh python2-pyasn1-0.1.9-7.el7.noarch.rpmrpm -ivh python-keyczar-0.71c-2.el7.noarch.rpmrpm -ivh python-httplib2-0.7.7-3.el7.noarch.rpmrpm -ivh python-markupsafe-0.11-10.el7.x86_64.rpmrpm -ivh python-jinja2-2.7.2-2.el7.noarch.rpmrpm -ivh libyaml-0.1.4-11.el7_0.x86_64.rpmrpm -ivh PyYAML-3.10-11.el7.x86_64.rpmrpm -ivh ansible-2.3.1.0-1.el7.noarch.rpm]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>Centos7,Ansible</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos7 离线rpm包安装mysql数据库]]></title>
    <url>%2Flogs%2Fcentos7_install_mysql%2F</url>
    <content type="text"><![CDATA[centos7 离线rpm包安装mysql数据库系统环境系统：Centos7 64位Mysql版本：mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar 由于Centos7使用的是Redhat的内核版本，因此操作系统选择Red Hat Enterprise Linux/Oracle Linux注：所有的安装命令均在root用户下执行##安装包上传使用WinSCP等工具将下载好的mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar上传到Centos7的任意目录，如mkdir -p /opt/mysql 将文件上传到/opt/mysql目录 tar xvf mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar解压解压后结果如下：123456789101112131415[hadoop@bdas1 mysql]$ ls -lrttotal 1157956-rw-r--r--. 1 7155 31415 25085192 Jun 24 20:08 mysql-community-client-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 3778852 Jun 24 20:08 mysql-community-devel-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 278292 Jun 24 20:08 mysql-community-common-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 46236988 Jun 24 20:08 mysql-community-embedded-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 24077820 Jun 24 20:08 mysql-community-embedded-compat-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 128296360 Jun 24 20:09 mysql-community-embedded-devel-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 2238032 Jun 24 20:09 mysql-community-libs-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 2115696 Jun 24 20:09 mysql-community-libs-compat-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 55456196 Jun 24 20:09 mysql-community-minimal-debuginfo-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 171537176 Jun 24 20:09 mysql-community-server-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 15258732 Jun 24 20:09 mysql-community-server-minimal-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 118490200 Jun 24 20:10 mysql-community-test-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 root root 592865280 Jul 22 16:08 mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar##安装Mysql使用rpm安装包安装Mysql无需事先创建mysql用户和mysql用户组，安装的初始化过程程序会自动创建mysql的用户和用户组，这个自动创建的用户不允许使用shell等方式登录，其内部的创建命令如下123#无需创建用户和组shell&gt; groupadd mysqlshell&gt; useradd -r -g mysql -s /bin/false mysql安装前需要先检测系统里是否存在系统里是否已存在mysql,如果有需要先卸载12rpm -qa |grep mysqlyum remove mysql-community-libs-5.7.19-1.el7.x86_64此外还需使用删除机器上所有有关mysql的库文件（通常是mariadb的依赖库）使用find / -name mysql查找是否存在依赖库，使用yum remove mysql-libs删除依赖库123456[root@bdas1 mysql]# find / -name mysql/usr/lib64/mysql/usr/share/mysql/opt/mysql[root@bdas1 ~]# yum remove mysql-libs[root@bdas1 ~]# find / -name mysql通常来说只需安装四个rpm包即可，四个rpm是存在依赖的，因此需要按顺序安装1234rpm -ivh mysql-community-common-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-libs-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-client-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-server-5.7.19-1.el7.x86_64.rpm##初始化##mysql环境1、使用 –initialize参数 初始化时生成随机root密码,密码在/var/log/mysqld.log 日志文件中1234mysqld --initialize --user=mysqlsystemctl start mysqldmysql -u root -p (输入/var/log/mysqld.log文件中的密码)mysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;新密码&apos;;2、使用–initialize-insecure参数，初始化时不产生随机密码，之后再创建密码1234mysqld --initialize-insecure --user=mysqlsystemctl start mysqldmysql -u root --skip-passwordmysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;新密码&apos;;启动mysql数据库：Centos7启动系统服务的密令格式，相对Centos6有些不同，123456789#Centos 7systemctl start mysqldsystemctl stop mysqldsystemctl status mysqld#Centos 6service mysqld startservice mysqld stopservice mysqld status检测是否启动12345[root@bdas1 mysql]# netstat -ntlp | grep 3306tcp6 0 0 :::3306 :::* LISTEN 4692/mysqld [root@bdas1 sbin]# ps -ef|grep mysqlmysql 1593 1 0 21:25 ? 00:00:01 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pidroot 2775 2686 0 22:18 pts/0 00:00:00 grep --color=auto mysql修改Mysql数控datedir目录1、修改/etc/sysconfig/selinux将SELINUX的值修改为disabled （需要重启）123456# This file controls the state of SELinux on the system.# SELINUX= can take one of these three values:# enforcing - SELinux security policy is enforced.# permissive - SELinux prints warnings instead of enforcing.# disabled - No SELinux policy is loaded.SELINUX=disabled2、vi /etc/my.cnf修改datedir和socket123456789#datadir=/var/lib/mysql#socket=/var/lib/mysql/mysql.sockdatadir=/appdata/mysqlsocket=/appdata/mysql/mysql.sock#此外还需修改[client]的socket配置路径[client]socket=/appdata/mysql/mysql.sock3、将源datadir的目录拷贝到修改后的目的目录，并修改目录权限，最后建链接1234cp -rf /var/lib/mysql /appdata/mysqlcd /appdatachown -R mysql mysqlchgrp -R mysql mysql4、测试是否修改成功12systemctl start mysqldmysql -u root -p错误1：第一步中修改/etc/sysconfig/selinux文件中的SELINUX，没有重启，重启即可，日志信息如下12345678910111213141516171819[root@bdas1 appdata]# systemctl start mysqldJob for mysqld.service failed because the control process exited with error code. See &quot;systemctl status mysqld.service&quot; and &quot;journalctl -xe&quot; for details.[root@bdas1 appdata]# systemctl status mysqld.service● mysqld.service - MySQL Server Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled) Active: failed (Result: start-limit) since Sat 2017-07-22 23:22:56 CST; 5s ago Docs: man:mysqld(8) ....而且/var/log/mysqld.log文件错误如下2017-07-22T13:06:03.966795Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().2017-07-22T13:06:03.977001Z 0 [ERROR] InnoDB: Operating system error number 13 in a file operation.2017-07-22T13:06:03.977025Z 0 [ERROR] InnoDB: The error means mysqld does not have the access rights to the directory.2017-07-22T13:06:03.977028Z 0 [ERROR] InnoDB: os_file_get_status() failed on &apos;./ibdata1&apos;. Can&apos;t determine file permissions2017-07-22T13:06:03.977032Z 0 [ERROR] InnoDB: Plugin initialization aborted with error Generic error2017-07-22T13:06:04.585249Z 0 [ERROR] Plugin &apos;InnoDB&apos; init function returned error.2017-07-22T13:06:04.585284Z 0 [ERROR] Plugin &apos;InnoDB&apos; registration as a STORAGE ENGINE failed.2017-07-22T13:06:04.585290Z 0 [ERROR] Failed to initialize plugins.错误2：systemctl start mysqld命令正确执行，但是mysql登录报错，且日志如下12345678910[root@bdas1 sbin]# mysqlERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/var/lib/mysql/mysql.sock&apos; (2)解决方式有两种，推荐使用方式一1、增加clinet的socket目录设置，vi /etc/my.cnf，在文件末尾增加如下内容即可,须重启[client]socket=/appdata/mysql/mysql.sock2、建立链接ln -s /appdata/mysql/mysql.sock /var/lib/mysql/即可对于为什么需要建立链接不太清楚]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>Centos7,Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos7 离线rpm包安装 orcale 数据库]]></title>
    <url>%2Flogs%2Fcentos7_install_oracle%2F</url>
    <content type="text"><![CDATA[centos7 离线rpm包安装 orcale 数据库http://www.jianshu.com/p/36a78274a00e关闭selinux：sed -i ‘s/SELINUX=enforcing/SELINUX=disabled/g’ /etc/selinux/config关闭防火墙systemctl disable iptables安装oracle所需的软件包yum install gcc gcc-c++ glibc glibc-devel glibc-headers ksh libaio libaio-devel libgcc libstdc++ libstdc++-devel make sysstat unixODBC unixODBC-devel zlib-devel unzip compat-libcap1 compat-libstdc++-33添加Oracle用户组groupadd oinstallgroupadd dbagroupadd operuseradd -g oinstall -G dba,oper oracle修改系统参数vim /etc/sysctl.conf 添加如下内容，应用系统参数 sysctl -p参数通常与系统有关（本虚拟机内存2G）如fs.file-max = 6815744kernel.sem = 250 32000 100 128kernel.shmmni = 4096kernel.shmall = 1073741824kernel.shmmax = 4398046511104net.core.rmem_default = 262144net.core.rmem_max = 4194304net.core.wmem_default = 212992net.core.wmem_max = 1048576fs.aio-max-nr = 65536net.ipv4.ip_local_port_range = 9000 65500128G内存fs.file-max = 6815744kernel.sem = 250 32000 100 128kernel.shmmni = 4096kernel.shmall = 1073741824kernel.shmmax = 4398046511104net.core.rmem_default = 204800net.core.rmem_max = 212992net.core.wmem_default = 204800net.core.wmem_max = 212992fs.aio-max-nr = 1048576net.ipv4.ip_local_port_range = 9000 65500vi /etc/security/limits.conf 添加如下内容oracle soft nofile 1024oracle hard nofile 65536oracle soft nproc 2047oracle hard nproc 16384oracle soft stack 10240oracle hard stack 32768创建安装文件夹mkdir -p /opt/oracle/app/oracle/product/12.2.0/db_1chown oracle:oinstall /opt/oracle/ -R配置环境变量vim ~/.bash_profile添加如下内容export ORACLE_HOSTNAME=bdas1export ORACLE_BASE=/opt/oracle/app/oracle/export ORACLE_HOME=/opt/oracle/app/oracle/product/12.2.0/export ORACLE_SID=ORCLexport ORACLE_OWNER=oracleexport PATH=$PATH:$ORACLE_HOME/bin:$HOME/bin./runInstaller -silent -responseFile /opt/oracle/database/db_install.rsp创建数据库dbca -silent -createDatabase -templateName General_Purpose.dbc -gdbname orac.bdas1 -sid orac -responseFile NO_VALUE -characterSet AL32UTF8 -memoryPercentage 30 -emConfiguration LOCAL错误一：INFO: ERROR: [Result.addErrorDescription:703] PRVF-7573 : Sufficient swap size is not available on node “bdas1” [Required = 2.6944GB (2825286.0KB) ; Found = 2GB (2097148.0KB)]INFO: ERROR: [Result.addErrorDescription:714] PRVF-7573 : Sufficient swap size is not available on node “bdas1” [Required = 2.6944GB (2825286.0KB) ; Found = 2GB (2097148.0KB)]INFO: ERROR: [Result.addErrorDescription:714] PRVF-7573 : Sufficient swap size is not available on node “bdas1” [Required = 2.6944GB (2825286.0KB) ; Found = 2GB (2097148.0KB)]INFO: INFO: [Task.perform:819]TaskSwapSize:Swap Size[CHECK_SWAP_SIZE]:TASK_SUMMARY:FAILED:IGNORABLE:VERIFICATION_FAILED:Total time taken [40 Milliseconds]ERRORMSG(bdas1): PRVF-7573 : Sufficient swap size is not available on node “bdas1” [Required = 2.6944GB (2825286.0KB) ; Found = 2GB (2097148.0KB)]INFO: INFO: [Task.perform:688]增加swap空间通常来说swap空间为内存空间的两倍，本centos7虚拟机分配的内存为2G,swap空间应该为4G[oracle@bdas1 database]$ swapon -sFilename Type Size Used Priority/dev/dm-1 partition 2097148 0 -1[oracle@bdas1 database]$ freetotal used free shared buff/cache availableMem: 1883524 280476 1088488 8576 514560 1435616Swap: 2097148 0 2097148因此需要增加2G的swap空间dd if=/dev/zero of=/swap bs=1024 count=2097152(of=挂载目录，bs=单位数据块（block）同时读入/输出的块大小为1024 个字节，count=2048000，及有2G个块)mkswap /swap ：对交换文件格式化并转换为swap分区swapon /swap ：挂载并激活分区（会提示：swapon: /swap: insecure permissions 0644, 0600 suggested.）chmod -R 0600 /swap ：修改权限free -h ：查看结果问题二：SQL&gt; connect /as sysdbaConnected to an idle instance.SQL&gt; startupORA-00845: MEMORY_TARGET not supported on this system增加空间,将空间设为7G :执行mount -t tmpfs shmfs -o size=7g /dev/shm重启永久生效，vi /dev/shmtmpfs /dev/shm tmpfs defaults,size=10240M 0 0问题三：[oracle@bdas1 dbs]$ sqlplus / as sysdbaSQL&gt; startupORACLE instance started.Total System Global Area 1073741824 bytesFixed Size 8628936 bytesVariable Size 675284280 bytesDatabase Buffers 381681664 bytesRedo Buffers 8146944 bytesORA-00205: error in identifying control file, check alert log for more info错误日志查看： /opt/oracle/app/oracle/diag/rdbms/orcl/orac/trace/*.logOracle Database Installation Checklist1、Server Hardware Checklist for Oracle Database InstallationUse this checklist to check hardware requirements for Oracle Database.2、Operating System Checklist for Oracle Database Installation on LinuxUse this checklist to check minimum operating system requirements for Oracle Database.3、Server Configuration Checklist for Oracle Database InstallationUse this checklist to check minimum server configuration requirements for Oracle Database installations.4、Oracle User Environment Configuration Checklist for Oracle Database InstallationUse this checklist to plan operating system users, groups, and environments for Oracle Database management.5、Storage Checklist for Oracle Database InstallationUse this checklist to review storage minimum requirements and assist with configuration planning.6、Installer Planning Checklist for Oracle DatabaseUse this checklist to assist you to be prepared before starting Oracle Universal Installer.7、Deployment Checklist for Oracle DatabaseUse this checklist to decide the deployment method for a single-instance Oracle Database.http://docs.oracle.com/database/122/LADBI/checking-server-hardware-and-memory-configuration.htm#LADBI-GUID-DC04ABB6-1822-444A-AB1B-8C306079439CChecking Server Hardware and Memory Configuration1、Server Hardware Checklist for Oracle Database InstallationUse this checklist to check hardware requirements for Oracle Database.Checking Server Hardware and Memory Configurationgrep MemTotal /proc/meminfo2、Operating System Checklist for Oracle Database Installation on LinuxUse this checklist to check minimum operating system requirements for Oracle Database.3、Server Configuration Checklist for Oracle Database InstallationUse this checklist to check minimum server configuration requirements for Oracle Database installations.4、Oracle User Environment Configuration Checklist for Oracle Database InstallationUse this checklist to plan operating system users, groups, and environments for Oracle Database management.5、Storage Checklist for Oracle Database InstallationUse this checklist to review storage minimum requirements and assist with configuration planning.6、Installer Planning Checklist for Oracle DatabaseUse this checklist to assist you to be prepared before starting Oracle Universal Installer.7、Deployment Checklist for Oracle DatabaseUse this checklist to decide the deployment method for a single-instance Oracle Database.title: 个人博客搭建过程随手笔记date: 2017-07-22 02:50:38tags: Centos7,Mysqlcategory: logscentos7 离线rpm包安装mysql数据库系统环境系统：Centos7 64位Mysql版本：mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar 由于Centos7使用的是Redhat的内核版本，因此操作系统选择Red Hat Enterprise Linux/Oracle Linux注：所有的安装命令均在root用户下执行##安装包上传使用WinSCP等工具将下载好的mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar上传到Centos7的任意目录，如mkdir -p /opt/mysql 将文件上传到/opt/mysql目录 tar xvf mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar解压解压后结果如下：123456789101112131415[hadoop@bdas1 mysql]$ ls -lrttotal 1157956-rw-r--r--. 1 7155 31415 25085192 Jun 24 20:08 mysql-community-client-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 3778852 Jun 24 20:08 mysql-community-devel-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 278292 Jun 24 20:08 mysql-community-common-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 46236988 Jun 24 20:08 mysql-community-embedded-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 24077820 Jun 24 20:08 mysql-community-embedded-compat-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 128296360 Jun 24 20:09 mysql-community-embedded-devel-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 2238032 Jun 24 20:09 mysql-community-libs-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 2115696 Jun 24 20:09 mysql-community-libs-compat-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 55456196 Jun 24 20:09 mysql-community-minimal-debuginfo-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 171537176 Jun 24 20:09 mysql-community-server-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 15258732 Jun 24 20:09 mysql-community-server-minimal-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 118490200 Jun 24 20:10 mysql-community-test-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 root root 592865280 Jul 22 16:08 mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar##安装Mysql使用rpm安装包安装Mysql无需事先创建mysql用户和mysql用户组，安装的初始化过程程序会自动创建mysql的用户和用户组，这个自动创建的用户不允许使用shell等方式登录，其内部的创建命令如下123#无需创建用户和组shell&gt; groupadd mysqlshell&gt; useradd -r -g mysql -s /bin/false mysql安装前需要先检测系统里是否存在系统里是否已存在mysql,如果有需要先卸载12rpm -qa |grep mysqlyum remove mysql-community-libs-5.7.19-1.el7.x86_64此外还需使用删除机器上所有有关mysql的库文件（通常是mariadb的依赖库）使用find / -name mysql查找是否存在依赖库，使用yum remove mysql-libs删除依赖库123456[root@bdas1 mysql]# find / -name mysql/usr/lib64/mysql/usr/share/mysql/opt/mysql[root@bdas1 ~]# yum remove mysql-libs[root@bdas1 ~]# find / -name mysql通常来说只需安装四个rpm包即可，四个rpm是存在依赖的，因此需要按顺序安装1234rpm -ivh mysql-community-common-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-libs-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-client-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-server-5.7.19-1.el7.x86_64.rpm##初始化##mysql环境1、使用 –initialize参数 初始化时生成随机root密码,密码在/var/log/mysqld.log 日志文件中1234mysqld --initialize --user=mysqlsystemctl start mysqldmysql -u root -p (输入/var/log/mysqld.log文件中的密码)mysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;新密码&apos;;2、使用–initialize-insecure参数，初始化时不产生随机密码，之后再创建密码1234mysqld --initialize-insecure --user=mysqlsystemctl start mysqldmysql -u root --skip-passwordmysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;新密码&apos;;启动mysql数据库：Centos7启动系统服务的密令格式，相对Centos6有些不同，123456789#Centos 7systemctl start mysqldsystemctl stop mysqldsystemctl status mysqld#Centos 6service mysqld startservice mysqld stopservice mysqld status检测是否启动12345[root@bdas1 mysql]# netstat -ntlp | grep 3306tcp6 0 0 :::3306 :::* LISTEN 4692/mysqld [root@bdas1 sbin]# ps -ef|grep mysqlmysql 1593 1 0 21:25 ? 00:00:01 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pidroot 2775 2686 0 22:18 pts/0 00:00:00 grep --color=auto mysql修改Mysql数控datedir目录1、修改/etc/sysconfig/selinux将SELINUX的值修改为disabled （需要重启）123456# This file controls the state of SELinux on the system.# SELINUX= can take one of these three values:# enforcing - SELinux security policy is enforced.# permissive - SELinux prints warnings instead of enforcing.# disabled - No SELinux policy is loaded.SELINUX=disabled2、vi /etc/my.cnf修改datedir和socket123456789#datadir=/var/lib/mysql#socket=/var/lib/mysql/mysql.sockdatadir=/appdata/mysqlsocket=/appdata/mysql/mysql.sock#此外还需修改[client]的socket配置路径[client]socket=/appdata/mysql/mysql.sock3、将源datadir的目录拷贝到修改后的目的目录，并修改目录权限，最后建链接1234cp -rf /var/lib/mysql /appdata/mysqlcd /appdatachown -R mysql mysqlchgrp -R mysql mysql4、测试是否修改成功12systemctl start mysqldmysql -u root -p错误1：第一步中修改/etc/sysconfig/selinux文件中的SELINUX，没有重启，重启即可，日志信息如下12345678910111213141516171819[root@bdas1 appdata]# systemctl start mysqldJob for mysqld.service failed because the control process exited with error code. See &quot;systemctl status mysqld.service&quot; and &quot;journalctl -xe&quot; for details.[root@bdas1 appdata]# systemctl status mysqld.service● mysqld.service - MySQL Server Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled) Active: failed (Result: start-limit) since Sat 2017-07-22 23:22:56 CST; 5s ago Docs: man:mysqld(8) ....而且/var/log/mysqld.log文件错误如下2017-07-22T13:06:03.966795Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().2017-07-22T13:06:03.977001Z 0 [ERROR] InnoDB: Operating system error number 13 in a file operation.2017-07-22T13:06:03.977025Z 0 [ERROR] InnoDB: The error means mysqld does not have the access rights to the directory.2017-07-22T13:06:03.977028Z 0 [ERROR] InnoDB: os_file_get_status() failed on &apos;./ibdata1&apos;. Can&apos;t determine file permissions2017-07-22T13:06:03.977032Z 0 [ERROR] InnoDB: Plugin initialization aborted with error Generic error2017-07-22T13:06:04.585249Z 0 [ERROR] Plugin &apos;InnoDB&apos; init function returned error.2017-07-22T13:06:04.585284Z 0 [ERROR] Plugin &apos;InnoDB&apos; registration as a STORAGE ENGINE failed.2017-07-22T13:06:04.585290Z 0 [ERROR] Failed to initialize plugins.错误2：systemctl start mysqld命令正确执行，但是mysql登录报错，且日志如下12345678910[root@bdas1 sbin]# mysqlERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/var/lib/mysql/mysql.sock&apos; (2)解决方式有两种，推荐使用方式一1、增加clinet的socket目录设置，vi /etc/my.cnf，在文件末尾增加如下内容即可[client]socket=/appdata/mysql/mysql.sock2、建立链接ln -s /appdata/mysql/mysql.sock /var/lib/mysql/即可对于为什么需要建立链接不太清楚]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>Centos7,Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客搭建过程随手笔记]]></title>
    <url>%2Flogs%2Fblog-build%2F</url>
    <content type="text"><![CDATA[个人博客的搭建日志，记录博客搭建过程的中的一些心得，由衷感谢Grok的博客对我的指导。系统环境开发平台：Windows开发工具：Hexo博客主题：NextHexo 环境搭建搭建过程主要参考 Grok的博客知行合一 | 用 Hexo 搭建博客Hexo 搭建博客教程补遗主要步骤如下：1、git工具安装2、wget工具安装将下载的wget.exe文件放入 C:\Windows\System32 目录即可使用wget密令3、node.js工具安装4、Hexo工具安装实用工具 npm install -g cnpm –registry=https://registry.npm.taobao.org安装模块时只要用 cnpm 替换 npm 即可，会直接从淘宝 NPM 安装，安装命令形如：cnpm install [name]Hexo 博客压缩优化Hexo主程序并不对生成的页面进行优化，致使页面内容稀疏，由于网面大小的会直接影响网页打开的速度，因此对页面进行压缩是有必要的。简单来说有两种可选方式进行生成网页的压缩优化。方式一：使用gulp插件，自行编写优化脚本，如hexo博客－性能优化方式二：使用Hexo软件的配套插件，如：hexo-neat 、hexo-all-minifier、hexo-filter-cleanup本博客采用的是hexo-neat插件1、插件有两种下载方式方式一：使用密令行1$ npm install hexo-neat --save方式二：登录插件的commit分支页面（如hexo-neat），手工下插件并将其解压到 “blog根目录\node_modules” 目录下, 注意插件前缀是”hexo-…”2、下载完插件后，修改站点的配置文件 _config.yml ,加入相关的压缩配置12345678910111213141516## Hexo-neat configneat_enable: trueneat_html: enable: true exclude:neat_css: enable: true exclude: - '*.min.css'neat_js: enable: true mangle: true output: compress: exclude: - '*.min.js'值得注意的是：由于Hexo版本升级等原因，在插件的使用说明里并没有说明需要在配置文件里 package.json 增加插件依赖如下增加了”hexo-neat”: “^1.0.4”,依赖项1234567891011121314 "dependencies": &#123; "hexo": "^3.2.0", "hexo-deployer-git": "^0.3.0", "hexo-generator-archive": "^0.1.4", "hexo-generator-category": "^0.1.3", "hexo-generator-index": "^0.2.1", "hexo-generator-tag": "^0.2.0", "hexo-neat": "^1.0.4", "hexo-renderer-ejs": "^0.2.0", "hexo-renderer-marked": "^0.2.10", "hexo-renderer-stylus": "^0.3.1", "hexo-server": "^0.2.0", "stream-to-array": "^2.3.0"&#125;如果增加依赖后，使用 hexo generate 指令生成页面时报错找不到 stream-to-array 等依赖，使用cnpm直接安装即可1$ cnpm install stream-to-array --savegit管理博客使用git工具对blog文件进行管理有两个必要性其一：当修改博客出错时可以用来恢复。其二：使用 hexo deploy 发布的博客，有许多内容并不会上传到github上面，而仅仅存储在本地，因此只能在同一台主机上编辑博客。使用git管理博客步骤如下：由于hexo也是使用git工具进行部署的，因此如果在博客根目录下使用 git init 来创建Repository，会和hexo创建的Repository发生冲突，因此可采用 父-子 目录的方式进行规避，将Hexo创建的博客作为子目录，至于git管理的父目录下，结构示意如下：123456789101112+--myblog #git 文件管理目录| || + --blog #Hexo 博客目录| | || | source| | _config.yml| | ...| || + --.git #git参数文件| | || | index| |1、打开git bush，进入git根目录/myblog执行git init1$ git init2、修改博客根目录下的 myblog/bolg/.gitignore 文件，仅保留public/，该文件是hexo生成的博客页面文件，不必要使用git管理（经过测试，这个步不做也是可行的）1234567#.DS_Store#Thumbs.db#db.json#*.log#node_modules/public/#.deploy_git/3、使用git add . 添加所有文件，如果 git 报错 Filename too long ，执行 git config –global core.longpaths true 修改git配置即可，如果有依赖文件目录添加失败，检查该目录下是否存在 .git文件夹，如果存在则说明该目录下的文件是属于另外一个repository仓库的，一种可行的解决方式是直接删除该目录，登录github直接下载该依赖文件，将其替换掉即可。（凡是使用 git clone https://github.com/iissnan/hexo-theme-next themes/next 等密令下载的插件都包含 .git文件夹，均需登录 githut 直接下压缩包文件进行替换）4、使用git commit -m “first commmit”计较5、登录github，为博客的源文件创建一个空的仓库，按照github提示，将文件上传到github5、其他主机登录步骤一：搭建好Hexo环境，创建博客根目录二：使用git使用git clone https://github.com/xxx/myblog.git 命令下载git上传的文件即可。注意：整个过程都无需再次使用 hexo init 指令，来初始化文件夹，安装好hexo后只需执行 npm install 密令安装来安装hexo serverMarkdown 编辑工具Typora由于Hexo不能够在页面上实时显示正在编写的文档，每次查看编写效果都需要执行如下指令，繁琐而不直观。123$ hexo clean$ hexo generate$ hexo serverHexo 页面底部注释由hexo的模板自动生成的页面，在底部默认会有版权和主体的注释，如图：容易暴露个人智商，作为强迫症患者，简直无法忍受。经过查找，底框代码是在：blog\themes\next\layout_partials\目录下的footer.swig文件里说明的，修改文件内容如下：1234567891011121314&lt;div class=&quot;copyright&quot; &gt; &#123;% set current = date(Date.now(), &quot;YYYY&quot;) %&#125; &amp;copy; &#123;% if theme.since and theme.since != current %&#125; &lt;i&gt; &#123;&#123; theme.since &#125;&#125; - &lt;\i&gt; &#123;% endif %&#125; &lt;span itemprop=&quot;copyrightYear&quot;&gt;&lt;i&gt;&#123;&#123; current &#125;&#125;&lt;/i&gt;&lt;/span&gt; &lt;span class=&quot;with-love&quot;&gt; &lt;i class=&quot;fa fa-&#123;&#123; theme.authoricon &#125;&#125;&quot;&gt; &lt;/i&gt; &lt;/span&gt; &lt;span class=&quot;author&quot; itemprop=&quot;copyrightHolder&quot;&gt; &lt;i&gt;Powered By - &#123;&#123; config.author &#125;&#125; &lt;/i&gt; &lt;/span&gt;&lt;/div&gt;&#123;% if theme.copyright %&#125;&lt;div class=&quot;copyright&quot;&gt; &lt;i&gt;Contact Me&amp;nbsp&amp;nbsp&amp;nbsp|&amp;nbsp&amp;nbsp&amp;nbsp&lt;/i&gt; &lt;i&gt;&lt;a target=&quot;_blank&quot; rel=&quot;external&quot; href=&quot;https://github.com/timior&quot;&gt;https://github.com/timior&lt;/a&gt;&lt;/i&gt;&lt;/div&gt;&#123;% endif %&#125;额外添加标签，让其显示为斜体字，在 “|” 字符两边添加多个&amp;nbsp，插入空格让其看上去更加简洁，最后显示效果如下:评论系统插件Hexo的Neat主体里面已经集成了几种评论工具插件，个人先尝试了网易云跟帖，整体感觉并不好，因为网易留言回复采用的是”楼上楼“方式，可经过几轮回复留言区会变得一片混乱，跟本找不到谁是谁的留言，之后尝试了来必力，使用感觉还不错，留言回复采用的是“楼中楼”方式，直观清晰，具体可浏览本博客的留言区域。不过有个缺点，这个插件貌似不支持留言导入导出的功能，这意味着，一旦上了船就别想再跑了，此外这个插件是韩国的，我电脑所在电信网络，注册登录总是出现出现网络故障，无赖最后使用手机网络来注册登录，感觉手机网络还是很给力的。博客图床-七牛云由于博客托管在github上面，加载速度本来就慢，如果还需加载大量的图片，那就更加无法忍受了，所以图床是必须要有的，见大家都推荐使用七牛云，尝试了下，加载速度还不错，步骤如下：一：注册七牛云，新建对象存储空间二：进入存储空间-内容管理-上传文件在右边可以添加文件的前缀（先填写右侧的文件路径，再添加文件，就会给文件自动加上前缀）三：图片的使用七牛云上上传的图片，可以在页面里直接使用，无需添加任何设置，复制图片路径，哪里要引用就粘哪，在Hexo的markdown里引用方式之一：![](粘入复制的链接)To be Continued…]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>Hexo,github</tag>
      </tags>
  </entry>
</search>