<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[test_image]]></title>
    <url>%2Funcategorized%2Ftest-image%2F</url>
    <content type="text"><![CDATA[TEST1234&lt;center&gt; &lt;iframe name=&quot;iframe_canvas&quot; src=&quot;http://oqaxv1vwu.bkt.clouddn.com/image/test3.PNG&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; width=&quot;400&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt; &lt;/center&gt;END]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Funcategorized%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new "My New Post"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[个人博客搭建过程随手笔记]]></title>
    <url>%2Flogs%2Fblog-build-logs%2F</url>
    <content type="text"><![CDATA[个人博客的搭建日志，记录博客搭建过程的中的一些心得，由衷感谢Grok的博客对我的指导。系统环境开发平台：Windows开发工具：Hexo博客主题：NextHexo 环境搭建搭建过程主要参考 Grok的博客知行合一 | 用 Hexo 搭建博客Hexo 搭建博客教程补遗主要步骤如下：1、git工具安装2、wget工具安装将下载的wget.exe文件放入 C:\Windows\System32 目录即可使用wget密令3、node.js工具安装4、Hexo工具安装实用工具 npm install -g cnpm –registry=https://registry.npm.taobao.org安装模块时只要用 cnpm 替换 npm 即可，会直接从淘宝 NPM 安装，安装命令形如：cnpm install [name]Hexo 博客压缩优化Hexo主程序并不对生成的页面进行优化，致使页面内容稀疏，由于网面大小的会直接影响网页打开的速度，因此对页面进行压缩是有必要的。简单来说有两种可选方式进行生成网页的压缩优化。方式一：使用gulp插件，自行编写优化脚本，如hexo博客－性能优化方式二：使用Hexo软件的配套插件，如：hexo-neat 、hexo-all-minifier、hexo-filter-cleanup本博客采用的是hexo-neat插件1、插件有两种下载方式方式一：使用密令行1$ npm install hexo-neat --save方式二：登录插件的commit分支页面（如hexo-neat），手工下插件并将其解压到 “blog根目录\node_modules” 目录下, 注意插件前缀是”hexo-…”2、下载完插件后，修改站点的配置文件 _config.yml ,加入相关的压缩配置12345678910111213141516## Hexo-neat configneat_enable: trueneat_html: enable: true exclude:neat_css: enable: true exclude: - '*.min.css'neat_js: enable: true mangle: true output: compress: exclude: - '*.min.js'值得注意的是：由于Hexo版本升级等原因，在插件的使用说明里并没有说明需要在配置文件里 package.json 增加插件依赖如下增加了”hexo-neat”: “^1.0.4”,依赖项1234567891011121314 "dependencies": &#123; "hexo": "^3.2.0", "hexo-deployer-git": "^0.3.0", "hexo-generator-archive": "^0.1.4", "hexo-generator-category": "^0.1.3", "hexo-generator-index": "^0.2.1", "hexo-generator-tag": "^0.2.0", "hexo-neat": "^1.0.4", "hexo-renderer-ejs": "^0.2.0", "hexo-renderer-marked": "^0.2.10", "hexo-renderer-stylus": "^0.3.1", "hexo-server": "^0.2.0", "stream-to-array": "^2.3.0"&#125;如果增加依赖后，使用 hexo generate 指令生成页面时报错找不到 stream-to-array 等依赖，使用cnpm直接安装即可1$ cnpm install stream-to-array --savegit管理博客使用git工具对blog文件进行管理有两个必要性其一：当修改博客出错时可以用来恢复。其二：使用 hexo deploy 发布的博客，有许多内容并不会上传到github上面，而仅仅存储在本地，因此只能在同一台主机上编辑博客。使用git管理博客步骤如下：由于hexo也是使用git工具进行部署的，因此如果在博客根目录下使用 git init 来创建Repository，会和hexo创建的Repository发生冲突，因此可采用 父-子 目录的方式进行规避，将Hexo创建的博客作为子目录，至于git管理的父目录下，结构示意如下：123456789101112+--myblog #git 文件管理目录| || + --blog #Hexo 博客目录| | || | source| | _config.yml| | ...| || + --.git #git参数文件| | || | index| |1、打开git bush，进入git根目录/myblog执行git init1$ git init2、修改博客根目录下的 myblog/bolg/.gitignore 文件，仅保留public/，该文件是hexo生成的博客页面文件，不必要使用git管理（经过测试，这个步不做也是可行的）1234567#.DS_Store#Thumbs.db#db.json#*.log#node_modules/public/#.deploy_git/3、使用git add . 添加所有文件，如果 git 报错 Filename too long ，执行 git config –global core.longpaths true 修改git配置即可，如果有依赖文件目录添加失败，检查该目录下是否存在 .git文件夹，如果存在则说明该目录下的文件是属于另外一个repository仓库的，一种可行的解决方式是直接删除该目录，登录github直接下载该依赖文件，将其替换掉即可。（凡是使用 git clone https://github.com/iissnan/hexo-theme-next themes/next 等密令下载的插件都包含 .git文件夹，均需登录 githut 直接下压缩包文件进行替换）4、使用git commit -m “first commmit”计较5、登录github，为博客的源文件创建一个空的仓库，按照github提示，将文件上传到github5、其他主机登录步骤一：搭建好Hexo环境，创建博客根目录二：使用git使用git clone https://github.com/xxx/myblog.git 命令下载git上传的文件即可。注意：整个过程都无需再次使用 hexo init 指令，来初始化文件夹，安装好hexo后只需执行 npm install 密令安装来安装hexo serverMarkdown 编辑工具Typora由于Hexo不能够在页面上实时显示正在编写的文档，每次查看编写效果都需要执行如下指令，繁琐而不直观。123$ hexo clean$ hexo generate$ hexo server]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>Hexo,github</tag>
      </tags>
  </entry>
</search>