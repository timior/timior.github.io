<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Spark-Job初步]]></title>
    <url>%2Fbigdata%2Fspark%2Fspark-wordcount2%2F</url>
    <content type="text"><![CDATA[使用sparkJob 来进行WordCount处理编译环境搭建（Windows平台）1、IDE环境Intellij 2017.2.2 ,首先安装好Intellij IDEA，和JAVA环境2、在Intellij中安装scala插件3、安装打包编译工具sbt插件4、配置.sbt源,在 C:\Users\Tiami.sbt目录下新建repositories文件，文件写入如下内容1234[repositories]localrepox-maven: http://repox.gtan.com:8078repox-ivy: http://repox.gtan.com:8078, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]WordCount-SparkJOb创建执行1、新建立Scala-SBT项目File–&gt;New–&gt;Project–&gt;Scala–&gt;SBT–&gt;Next,输入项目名称，配置Java-JDK,选择SBT版本（勾选SBT后面的Source选项）选择Scala版本,由于Spark的编译用到了Scala的依赖包，如果Scala版本选的比Spark编译的版本高将会报错。对于spark2.2.0及以下的版本选择的Scala版本不应高于2.11.112、配置build.sbt先配置build.sbt编译依赖文件，编辑build.sbt123456name := &quot;WordCount&quot;version := &quot;1.0&quot;scalaVersion := &quot;2.11.11&quot;// for sparklibraryDependencies += &quot;org.apache.spark&quot; %% &quot;spark-core&quot; % &quot;2.1.1&quot; % &quot;provided&quot;libraryDependencies += &quot;org.apache.spark&quot; %% &quot;spark-sql&quot; % &quot;2.1.1&quot; % &quot;provided&quot;3、新建Scala源文件在项目的src/main/scala/下新建WordCount.Scala文件,加入如下内容123456789import org.apache.spark.sql.SparkSessionobject WordCount&#123; def main(args: Array[String])&#123; val spark = SparkSession.builder().appName(&quot;WordCount&quot;).master(&quot;local&quot;).getOrCreate() val text = spark.sparkContext.textFile(&quot;file:///usr/hdp/2.6.1.0-129/spark2/README.md&quot;) val result=text.flatMap(_.split(&quot;[^A-Za-z]&quot;)).map((_,1)).reduceByKey(_+_).collect() result.foreach(println) &#125;&#125;4、编译配置工具栏File–&gt;Project Structure–&gt;Artifacts–&gt;+号新增–&gt;JAR–&gt;From module with dependencies–&gt;OKCreate JAR from Modules–&gt;Module:wordcount–&gt;Main Class:WordCount–&gt;OK工具栏Build–&gt;Build Artifacts–&gt;wordcount.jar–&gt;Build编译结果在\out\artifacts\wordcount_jar\wordcount.jar5、执行将wordcount.jar，传入Hadoo-Spark集群环境spark-submit wordcount.jar执行]]></content>
      <categories>
        <category>Bigdata</category>
        <category>Spark</category>
      </categories>
      <tags>
        <tag>WordCount</tag>
        <tag>SparkJob</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Spark-shell初步]]></title>
    <url>%2Fbigdata%2Fspark%2Fspark-wordcount%2F</url>
    <content type="text"><![CDATA[使用spark-shell 来进行WordCount处理WordCounter实现文本的单词计数统计，测试文件为spark2的README.Md文档寻找spark2的README.md文件所在位置find / -name ‘README.md’如文件位置/usr/hdp/2.6.1.0-129/spark2/README.md启动spark-shell，使用spark-shell 来进行统计123456789101112131415Spark-shell# 从本地读取文件scala&gt; val textFile=sc.textFile(&quot;file:///usr/hdp/2.6.1.0-129/spark2/README.md&quot;)# 按Key升序排序scala&gt; val wordCount = textFile.flatMap(line =&gt; line.split(&quot;[^A-Za-z]&quot;)).map(word =&gt; (word, 1)).reduceByKey((a, b) =&gt; a + b).sortByKey().collectscala&gt; val wordCount = textFile.flatMap(_.split(&quot;[^A-Za-z]&quot;)).map((_,1)).reduceByKey(_ + _).sortByKey().collect# 按Key降序排序scala&gt; val wordCount = textFile.flatMap(line =&gt; line.split(&quot;[^A-Za-z]&quot;)).map(word =&gt; (word, 1)).reduceByKey((a, b) =&gt; a + b).sortByKey(false).collectscala&gt; val wordCount = textFile.flatMap(_.split(&quot;[^A-Za-z]&quot;)).map((_, 1)).reduceByKey(_ + _).sortByKey(false).collect# 按Value升序排序val wordCount = textFile.flatMap(line =&gt; line.split(&quot;[^A-Za-z]&quot;)).map(word =&gt; (word, 1)).reduceByKey((a, b) =&gt; a + b).map(x=&gt;(x._2,x._1)).sortByKey().map(x=&gt;(x._2,x._1)).collectval wordCount = textFile.flatMap(_.split(&quot;[^A-Za-z]&quot;)).map((_, 1)).reduceByKey(_ + _).map(x=&gt;(x._2,x._1)).sortByKey().map(x=&gt;(x._2,x._1)).collect# 按Value降序排序val wordCount = textFile.flatMap(line =&gt; line.split(&quot;[^A-Za-z]&quot;)).map(word =&gt; (word, 1)).reduceByKey((a, b) =&gt; a + b).map(x=&gt;(x._2,x._1)).sortByKey(false).map(x=&gt;(x._2,x._1)).collectval wordCount = textFile.flatMap(_.split(&quot;[^A-Za-z]&quot;)).map((_, 1)).reduceByKey(_ + _).map(x=&gt;(x._2,x._1)).sortByKey(false).map(x=&gt;(x._2,x._1)).collect小结1、启动spark-shell时，会创建一个名为sc的sparkContext1234#启动示例./bin/spark-shell --master local[4]./bin/spark-shell --master local[4] --jars code.jar./bin/spark-shell --master local[4] --packages &quot;org.example:example:0.1&quot;2、使用sparkContext加载文件方式12345# 从本地系统读取文件val textFile=sc.textFile(&quot;file:///usr/hdp/2.6.1.0-129/spark2/README.md&quot;)# 从HDFS上读取文件# 可使用 hdfs dfs -put /usr/hdp/2.6.1.0-129/spark2/README.md /user/spark2/README.md 将文件从本地传入HDFSval textFile=sc.textFile(&quot;/user/spark2/README.md&quot;)3、函数说明flatMap() :相当于将多个集合中的元素先提取出来，之后组成一个集合（元素不去重）line =&gt; line.split(“[^A-Za-z]”) :对于文件的每一行，按正则表达式[^A-Za-z]进行拆分，即按非字母字符拆分map(word =&gt; (word, 1)) :将单个的元素RDD[String],通过map变换成key-value二元组RDD[(String, Int)]collect :触犯Actor,并显示处理结果3、写为一行1sc.textFile(&quot;file:///usr/hdp/2.6.1.0-129/spark2/README.md&quot;).flatMap(_.split(&quot;[^A-Za-z]&quot;)).map((_, 1)).reduceByKey(_ + _).map(x=&gt;(x._2,x._1)).sortByKey(false).map(x=&gt;(x._2,x._1)).collect]]></content>
      <categories>
        <category>Bigdata</category>
        <category>Spark</category>
      </categories>
      <tags>
        <tag>SparkShell</tag>
        <tag>WordCount</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos7 在线安装 Ambari （一）]]></title>
    <url>%2Flogs%2Fcentos7_install_ambari%2F</url>
    <content type="text"><![CDATA[Centos7 64位 在线安装 Ambaricentos7 在线安装 ambari系统环境，4台虚拟机，1台作为master节点，3台作为slave节点关防火墙，关SELINUX(注：关SELINUX需要重启才会有效)1234systemctl stop firewalldsystemctl disable firewalldsed -i &apos;s/SELINUX=enforcing/SELINUX=disabled/g&apos; /etc/selinux/configcat /etc/selinux/config网络配置12345678#预留slave4作为集群添加删除节点测试cat &gt; /etc/hosts &lt;&lt; EOF192.168.56.10 master1.bigdata.com master1192.168.56.11 slave1.bigdata.com slave1192.168.56.12 slave2.bigdata.com slave2192.168.56.13 slave3.bigdata.com slave3192.168.56.14 slave4.bigdata.com slave4EOF主机名配置1234567# master1 节点echo &quot;master1&quot; &gt; /etc/hostname# slave1 节点echo &quot;slave1&quot; &gt; /etc/hostname# slave2 节点echo &quot;slave2&quot; &gt; /etc/hostname# 以此类推java环境 :安装目录: /usr/java/jdk 版本：jdk1.8.0_1111234567cat &gt;&gt; /etc/profile &lt;&lt; EOF# BEGIN ANSIBLE JAVA ENVVARexport JAVA_HOME=/usr/java/jdkexport CLASSPATH=.:\$JAVA_HOME/jre/lib/rt.jar:\$JAVA_HOME/lib/dt.jar:\$JAVA_HOME/lib/tools.jarexport PATH=\$PATH:\$JAVA_HOME/bin# END ANSIBLE JAVA ENVVAR EOF更改yum源镜像地址1234# 备份mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup# 获取repowget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repoambari 安装由于ambari的源在国外，下载速度过慢，容易出现安装失败的情况，因此先建立本地源，之后从本地源进行安装，采用httpd来建立源服务器通常来说需要建的源有:ambari本地源、HDP本地源、HDP-UTILS本地源，此外安装hive,ambari还需要数据库，因此顺带建立本地Msql源httpd服务搭建12345678910111213141516# 安装httpdyum install httpd# 启动httpdsystemctl start httpd.servicesystemctl status httpd.service# 设置开机自启echo &apos;/usr/sbin/apachectl start&apos; &gt;&gt; /etc/rc.d/rc.localchmod +x /etc/rc.d/rc.local# 设置http文件根目录cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.baksed -i &apos;s/&quot;\/var\/www\/html&quot;/&quot;\/appdata\/httpd\/www\/html&quot;/g&apos; /etc/httpd/conf/httpd.confdiff /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.baksystemctl restart httpd.service搭建本地源：ambari、HDP、HDP-UTILS源、Mysql源源文件下载地址:Ambari源 :http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.1.0/ambari-2.5.1.0-centos7.tar.gzHDP源 :http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.1.0/HDP-2.6.1.0-centos7-rpm.tar.gzHDP-UTILS源 :http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.21/repos/centos7/HDP-UTILS-1.1.0.21-centos7.tar.gzMysql源 :https://dev.mysql.com/downloads/mysql/1234# 如果使用wget下载很慢，可以尝试使用迅雷等下载工具下载，之后上传wget http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.1.0/ambari-2.5.1.0-centos7.tar.gzwget http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.1.0/HDP-2.6.1.0-centos7-rpm.tar.gzwget http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.21/repos/centos7/HDP-UTILS-1.1.0.21-centos7.tar.gz将下载的文件拷贝到httpd服务的DocumentRoot目录12345678# DocumentRoot=/appdata/httpd/www/html# 拷贝文件mkdir -p /appdata/httpd/www/html/ambari/ambari-2.5.1.0/mkdir -p /appdata/httpd/www/html/hdp/HDP-2.6.1.0/mkdir -p /appdata/httpd/www/html/hdp/HDP-UTILS-1.1.0.21/tar zxvf ambari-2.5.1.0-centos7.tar.gz -C /appdata/httpd/www/html/ambari/ambari-2.5.1.0/tar zxvf HDP-2.6.1.0-centos7-rpm.tar.gz -C /appdata/httpd/www/html/hdp/HDP-2.6.1.0/tar zxvf HDP-UTILS-1.1.0.21-centos7.tar.gz -C /appdata/httpd/www/html/hdp/HDP-UTILS-1.1.0.21/创建ambari、HDP、HDP-UTILS源的repo文件123456789101112131415161718192021222324252627cat &gt; /etc/yum.repos.d/ambari.repo &lt;&lt; EOF#VERSION_NUMBER=2.5.1.0-159[ambari-2.5.1.0]name=ambari Version - ambari-2.5.1.0#http://&lt;web.server&gt;/Ambari-2.5.1.0/&lt;OS&gt;baseurl=http://master1.bigdata.com/ambari/ambari-2.5.1.0/ambari/centos7gpgcheck=1gpgkey=http://master1.bigdata.com/ambari/ambari-2.5.1.0/ambari/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1[hdp-2.6.1.0]name=HDP Version - HDP-2.6.1.0baseurl=http://master1.bigdata.com/hdp/HDP-2.6.1.0/HDP/centos7/gpgcheck=1gpgkey=http://master1.bigdata.com/hdp/HDP-2.6.1.0/HDP/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1[HDP-UTILS-1.1.0.21]name=HDP-UTILS Version - HDP-UTILS-1.1.0.21baseurl=http://master1.bigdata.com/hdp/HDP-UTILS-1.1.0.21/gpgcheck=1gpgkey=http://master1.bigdata.com/hdp/HDP-UTILS-1.1.0.21/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1EOFmysql 本地源环境搭建 mysql 5.7使用 repocreate 工具配合httpd搭建本地Mysql源12345678910111213141516171819202122232425262728293031323334# 安装repocreateyum install repocreate# 在httpd服务的文件目录(/appdata/httpd/www/html)下，创建源仓库目录mkdir -p /appdata/httpd/www/html/mysql/mysql-community-5.7.19# 使用sftp等工具将安装好的rpm包上传到/appdata/httpd/www/html/mysql/mysql-community-5.7.19目录# 创建源仓库createrepo /appdata/httpd/www/html/mysql/mysql-community-5.7.19#建立repo文件# baseurl=主机的FQDN(Fully Qualified Domain Name即主机的全域名，这里填主机的IP地址也是可行的)+ httpd目录下仓库地相当路径cat &gt;&gt; /etc/yum.repos.d/mysql-community.repo &lt;&lt; EOF[mysql57-community]name=MySQL 5.7 Community Serverbaseurl=http://master1.bigdata.com/mysql/mysql-community-5.7.19enabled=1gpgcheck=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysqlEOF# 安装mysql# 清除默认安装的库文件yum remove mysql-libs -y# 安装yum repolist all | grep mysqlyum install mysql-community-server# 初始化mysqlmysqld --initialize-insecure --user=mysqlsystemctl start mysqld#设置mysql的root密码(mysql)mysql -u root --skip-password#mysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;mysql&apos;;查看本地源安装结果,如果status-意为源中的rpm包的数目，如果大于0代表获取源信息成功12345678910111213141516171819[root@master1 centos7]# yum repolist Loaded plugins: fastestmirror, langpacksHDP-UTILS-1.1.0.21 | 2.9 kB 00:00:00 ambari-2.5.1.0 | 2.9 kB 00:00:00 hdp-2.6.1.0 | 2.9 kB 00:00:00 ambari-2.5.1.0/primary_db | 8.6 kB 00:00:00 Loading mirror speeds from cached hostfile * base: mirrors.aliyun.com * extras: mirrors.aliyun.com * updates: mirrors.aliyun.comrepo id repo name statusHDP-UTILS-1.1.0.21 HDP-UTILS Version - HDP-UTILS-1.1.0.21 64ambari-2.5.1.0 ambari Version - ambari-2.5.1.0 12base/7/x86_64 CentOS-7 - Base - mirrors.aliyun.com 9,363extras/7/x86_64 CentOS-7 - Extras - mirrors.aliyun.com 449hdp-2.6.1.0 HDP Version - HDP-2.6.1.0 232mysql57-community/x86_64 MySQL 5.7 Community Server 207updates/7/x86_64 CentOS-7 - Updates - mirrors.aliyun.com 2,146repolist: 12,473mysql 主备同步，高可用配置，为防止master节点宕机，在master1、slave1上搭建mysql,主备机实时同步1、修改配置文件/etc/my.cnf12345678# master1主机：在/etc/my.cnf的[mysqld]节点下添加如下信息log-bin=mysql-bin 开启二进制日志server-id=1 服务ID,要求每台主机各不相同# slave1备机：在/etc/my.cnf的[mysqld]节点下添加如下信息log-bin=mysql-bin 开启二进制日志server-id=2 服务ID,要求每台主机各不相同2、创建Replication用户1234567891011# master1 主机mysql -u root -pcreate user &apos;repl&apos;@&apos;%&apos; identified by &apos;repl&apos;;grant replication slave on *.* to &apos;repl&apos;@&apos;%&apos;;grant replication client,replication slave on *.* to &apos;repl&apos;@&apos;192.168.72.11&apos; identified by &apos;repl&apos;;# slave1 备机mysql -u root -pcreate user &apos;repl&apos;@&apos;%&apos; identified by &apos;repl&apos;;grant replication slave on *.* to &apos;repl&apos;@&apos;%&apos;;grant replication client,replication slave on *.* to &apos;repl&apos;@&apos;192.168.72.10&apos; identified by &apos;repl&apos;;3、查看两台主机的mysql bin log位置首先将两台主机mysql中的表锁定，代表锁定表，禁止所有操作。防止bin log位置发生变化。123FLUSH TABLES WITH READ LOCK;#如果两个mysql数据库里的数据不一致，需要先使用mysqldump工具导出数据同步，这里由于是新装的mysql，因此数据内容都是一致的#mysqldump -uroot -pxxx database_name &gt;database_name.sql查看master1，slave1主机bin log位置，记录Position列的值1SHOW MASTER STATUS;然后再解除两台主机mysql table的锁定1Unlock Tables;4、开始设置 Slave Replicationmaster1 主机123STOP SLAVE;CHANGE MASTER TO MASTER_HOST = &apos;192.168.72.11&apos;, MASTER_USER = &apos;repl&apos;, MASTER_PASSWORD = &apos;repl&apos;, MASTER_LOG_FILE = &apos;mysql-bin.000001&apos;, MASTER_LOG_POS = 910;START SLAVE;slave1 备机123STOP SLAVE;CHANGE MASTER TO MASTER_HOST = &apos;192.168.72.10&apos;, MASTER_USER = &apos;repl&apos;, MASTER_PASSWORD = &apos;repl&apos;, MASTER_LOG_FILE = &apos;mysql-bin.000001&apos;, MASTER_LOG_POS = 1225;START SLAVE;5、查看两台主机是否设置成功1234Show Slave Status;#如果两台主机Slave_IO_Running 和Slave_SQL_Running都为YES代表设置成功。可以进行数据库操作了#grant all privileges on *.* to root@&apos;%&apos; identified by &apos;mysql&apos;;#flush privileges;安装Ambariyum repolist all | grep ambariyum install ambari-server在mysql数据库中创建ambari数据库为ambari-server setup做准备，在mysql数据库中创建ambari数据库创建ambari数据脚本12345678910# vi create_ambari.sql 编辑建用户脚本create database ambari;use ambari;CREATE USER &apos;ambari&apos;@&apos;%&apos; IDENTIFIED BY &apos;ambari&apos;;GRANT ALL PRIVILEGES ON *.* TO &apos;ambari&apos;@&apos;%&apos;;CREATE USER &apos;ambari&apos;@&apos;master1.bigdata.com&apos; IDENTIFIED BY &apos;ambari&apos;;GRANT ALL PRIVILEGES ON *.* TO &apos;ambari&apos;@&apos;master1.bigdata.com&apos;;CREATE USER &apos;ambari&apos;@&apos;ambari&apos; IDENTIFIED BY &apos;ambari&apos;;GRANT ALL PRIVILEGES ON *.* TO &apos;ambari&apos;@&apos;ambari&apos;;FLUSH PRIVILEGES;执行脚本创建ambari数据库123456# source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql; 安装Ambari时已经创建好文件mysql -u root -pmysql&gt; source create_ambari.sql;mysql&gt; use ambari;mysql&gt; source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql;mysql&gt; exit;JDBC驱动将mysql-jcdb驱动拷贝到/usr/share/java目录,配置/etc/ambari-server/conf/ambari.properties文件12echo &quot;&quot; &gt;&gt; /etc/ambari-server/conf/ambari.propertiesecho &quot;server.jdbc.driver.path=/usr/share/java/mysql-connector-java-5.1.43-bin.jar&quot; &gt;&gt; /etc/ambari-server/conf/ambari.propertiessetup ambariambari-server setup12345678Customize user account for ambari-server daemon [y/n] (n)? n :选择否，如果选择非root用户安装，需要额外配置权限，否则会报错详情参考[Configuring Ambari for non-root access](https://www.ibm.com/support/knowledgecenter/en/SSPT3X_4.2.0/com.ibm.swg.im.infosphere.biginsights.install.doc/doc/inst_non_root.html)Do you want to change Oracle JDK [y/n] (n)? y :选择自定义JDK,Path to JAVA_HOME: /usr/java/jdkEnter advanced database configuration [y/n] (n)? y :选择高级选项,选择[3] - MySQL / MariaDBEnter choice (1): 3Hostname (localhost): master1.bigdata.comPort (3306): 3306Database name (ambari): ambariUsername (ambari): ambaristart ambariambari-server start浏览器打开http://192.168.56.10:8080/，是否能正常访问，用户名/密码:admin/adminambari-server stop建立ssh免密登录在master1上执行123456ssh-keygen -t rsa (-t:type密钥类型)ssh-copy-id -i ~/.ssh/id_rsa.pub root@master1.bigdata.comssh-copy-id -i ~/.ssh/id_rsa.pub root@slave1.bigdata.comssh-copy-id -i ~/.ssh/id_rsa.pub root@slave2.bigdata.comssh-copy-id -i ~/.ssh/id_rsa.pub root@slave3.bigdata.comssh-copy-id -i ~/.ssh/id_rsa.pub root@slave4.bigdata.com选择Use Local Repository值与/etc/yum.repos.d/ambari.repo文件里配的一致选择Target Hosts传入rsa私钥: ~/.ssh/id_rsa(注意是id_rsa里面的值，而不是公钥)启用chronyd1234567# 所有机器均需执行，用于调整内核中运行的系统时钟和时钟服务器同步systemctl enable chronyd.service -lsystemctl restart chronyd.service -lsystemctl status chronyd.service -l# 查看结果chronyc sourcestatschronyc sources -vAssign Slaves and Clientscat &gt;&gt; create_ambari.sql &lt;&lt; EOFcreate database mydb;use mydb;CREATE USER ‘test’@’%’ IDENTIFIED BY ‘test’;GRANT ALL PRIVILEGES ON . TO ‘test’@’%’;CREATE USER ‘test’@’slave1.bigdata.com’ IDENTIFIED BY ‘test’;GRANT ALL PRIVILEGES ON . TO ‘test’@’slave1.bigdata.com’;CREATE USER ‘test’@’test’ IDENTIFIED BY ‘test’;GRANT ALL PRIVILEGES ON . TO ‘test’@’test’;FLUSH PRIVILEGES;EOFHDFS用户sqoop import –connect jdbc:mysql://192.168.56.24/mydb –username hive –password hive –table “city” –target-dir /usr/table/cityPrerequisites installPrerequisites installyum install rpmyum install curlyum install wgetwget -p ~/ http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpmrpm -ivh ~/epel-release-latest-7.noarch.rpmrm -f ~/epel-release-latest-7.noarch.rpmyum install pdshinstall mysql192.168.56.10 master1.bigdata.com master1192.168.56.11 master2.bigdata.com master2192.168.56.12 slave1.bigdata.com slave1192.168.56.13 slave2.bigdata.com slave2192.168.56.14 slave3.bigdata.com slave3192.168.56.15 slave4.bigdata.com slave4mysql repocat &gt;&gt; /etc/yum.repos.d/mysql-community.repo &lt;&lt; EOF[mysql57-community]name=MySQL 5.7 Community Serverbaseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/\$basearch/enabled=1gpgcheck=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysqlEOFyum repolist all | grep mysqlyum install mysql-community-servermysql_repo=”/etc/yum.repos.d/mysql-community.repo”echo ‘[mysql57-community]’ &gt; “$mysql_repo”echo ‘name=MySQL 5.7 Community Server’ &gt;&gt; “$mysql_repo”echo ‘baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/$basearch/‘ &gt;&gt; “$mysql_repo”echo ‘enabled=1’ &gt;&gt; “$mysql_repo”echo ‘gpgcheck=0’ &gt;&gt; “$mysql_repo”echo ‘gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql’ &gt;&gt; “$mysql_repo”yum repolist all | grep mysqlyum install mysql-community-serverambariwget -O /etc/yum.repos.d/ambari.repo http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.1.0/ambari.repoyum install ambari-server -y#创建用户:ambari,修改用户密码为ambariuseradd ambariecho “ambari:ambari” | chpasswdstop firewalldsystemctl stop firewallddisable SELINUXsed -i ‘s/SELINUX=enforcing/SELINUX=disabled/g’ /etc/selinux/configenable cashsed -i ‘s/keepcache=0/keepcache=1/g’ /etc/yum.confJAVA_HOMEecho ‘#LANG’ &gt;&gt; /etc/profileecho ‘export LC_ALL=”zh_CN.GBK”‘ &gt;&gt; /etc/profileecho ‘export LANG=”zh_CN.GBK”‘ &gt;&gt; /etc/profileecho ‘’ &gt;&gt; /etc/profileecho ‘# BEGIN ANSIBLE JAVA ENVVAR ‘ &gt;&gt; /etc/profileecho ‘export JAVA_HOME=/usr/java/jdk’ &gt;&gt; /etc/profileecho ‘export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar’ &gt;&gt; /etc/profileecho ‘export PATH=$PATH:$JAVA_HOME/bin’ &gt;&gt; /etc/profileecho ‘# END ANSIBLE JAVA ENVVAR ‘ &gt;&gt; /etc/profilemysql jdbc driverwget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.43.tar.gztar zxvf mysql-connector-java-5.1.43.tar.gzmkdir -p /usr/share/javacp ./mysql-connector-java-5.1.43/mysql-connector-java-5.1.43-bin.jar /usr/share/java/rm -rf mysql-connector-java-5.1.43.tar.gz mysql-connector-java-5.1.43amb_profile=”/etc/ambari-server/conf/ambari.properties”echo “server.jdbc.driver.path=/usr/share/java/mysql-connector-java-5.1.43-bin.jar” &gt;&gt; “${amb_profile}”#create the schemaecho “create database ambari;”echo “mysql&gt; use ambari;”echo ‘mysql&gt; CREATE USER ‘ambari’@’%’ IDENTIFIED BY ‘ambari’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘ambari’@’%’;’echo ‘mysql&gt; CREATE USER ‘ambari’@’master.bigdata.com’ IDENTIFIED BY ‘ambari’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘ambari’@’master.bigdata.com’;’echo ‘mysql&gt; CREATE USER ‘ambari’@’ambari’ IDENTIFIED BY ‘ambari’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘ambari’@’ambari’;’echo ‘mysql&gt; FLUSH PRIVILEGES;’echo “mysql&gt; source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql”mysql -uroot -pecho “create database hive;”echo “mysql&gt; use hive”echo ‘mysql&gt; CREATE USER ‘hive’@’%’ IDENTIFIED BY ‘hive’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘hive’@’%’;’echo ‘mysql&gt; CREATE USER ‘hive’@’master.bigdata.com’ IDENTIFIED BY ‘hive’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘hive’@’master.bigdata.com’;’echo ‘mysql&gt; CREATE USER ‘hive’@’hive’ IDENTIFIED BY ‘hive’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘hive’@’hive’;’echo ‘mysql&gt; FLUSH PRIVILEGES;’echo “mysql&gt; source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql”mysql -uroot -pvi create_hive.sqlcreate database hive;use hive;CREATE USER ‘hive’@’%’ IDENTIFIED BY ‘hive’;GRANT ALL PRIVILEGES ON . TO ‘hive’@’%’;CREATE USER ‘hive’@’master1.bigdata.com’ IDENTIFIED BY ‘hive’;GRANT ALL PRIVILEGES ON . TO ‘hive’@’master1.bigdata.com’;CREATE USER ‘hive’@’hive’ IDENTIFIED BY ‘hive’;GRANT ALL PRIVILEGES ON . TO ‘hive’@’hive’;FLUSH PRIVILEGES;mysql&gt; source create_hive.sqlsystemc restart mysqldsetup ambariambari-server setupstart ambarisu - ambariambari-server startambari-server stop#HDP SITE https://docs.hortonworks.com/HDPDocuments/Ambari-2.5.1.0/bk_ambari-installation/content/hdp_26_repositories.htmlyum install httpdwget http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.1.0/HDP-2.6.1.0-centos7-rpm.tar.gzwget http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.21/repos/centos7/HDP-UTILS-1.1.0.21-centos7.tar.gzstop firewalldsystemctl stop firewalldsystemctl disable firewallddisable SELINUXsed -i ‘s/SELINUX=enforcing/SELINUX=disabled/g’ /etc/selinux/config—————–rpm——————–rpm -ivh rpm-libs-4.11.3-21.el7.x86_64.rpmrpm -ivh rpm-4.11.3-21.el7.x86_64.rpmrpm -ivh rpm-build-libs-4.11.3-21.el7.x86_64.rpmrpm -ivh rpm-python-4.11.3-21.el7.x86_64.rpm—————–curl——————–rpm -ivh libcurl-7.29.0-35.el7.centos.x86_64.rpmrpm -ivh curl-7.29.0-35.el7.centos.x86_64.rpm—————–wget——————–rpm -ivh wget-1.14-13.el7.x86_64.rpm—————–pdsh——————–rpm -ivh perl-parent-0.225-244.el7.noarch.rpmrpm -ivh perl-HTTP-Tiny-0.033-3.el7.noarch.rpmrpm -ivh perl-podlators-2.5.1-3.el7.noarch.rpmrpm -ivh perl-Pod-Perldoc-3.20-4.el7.noarch.rpmrpm -ivh perl-Pod-Escapes-1.04-291.el7.noarch.rpmrpm -ivh perl-Encode-2.51-7.el7.x86_64.rpmrpm -ivh perl-Text-ParseWords-3.29-4.el7.noarch.rpmrpm -ivh perl-Pod-Usage-1.63-3.el7.noarch.rpmrpm -ivh perl-Storable-2.45-3.el7.x86_64.rpmrpm -ivh perl-Exporter-5.68-3.el7.noarch.rpmrpm -ivh perl-constant-1.27-2.el7.noarch.rpmrpm -ivh perl-Time-Local-1.2300-2.el7.noarch.rpmrpm -ivh perl-Socket-2.010-4.el7.x86_64.rpmrpm -ivh perl-Carp-1.26-244.el7.noarch.rpmrpm -ivh perl-Time-HiRes-1.9725-3.el7.x86_64.rpmrpm -ivh perl-Pod-Simple-3.28-4.el7.noarch.rpmrpm -ivh perl-PathTools-3.40-5.el7.x86_64.rpmrpm -ivh perl-Scalar-List-Utils-1.27-248.el7.x86_64.rpmrpm -ivh perl-libs-5.16.3-291.el7.x86_64.rpmrpm -ivh perl-macros-5.16.3-291.el7.x86_64.rpmrpm -ivh perl-File-Temp-0.23.01-3.el7.noarch.rpmrpm -ivh perl-File-Path-2.09-2.el7.noarch.rpmrpm -ivh perl-threads-shared-1.43-6.el7.x86_64.rpmrpm -ivh perl-threads-1.87-4.el7.x86_64.rpmrpm -ivh perl-Filter-1.49-3.el7.x86_64.rpmrpm -ivh perl-Getopt-Long-2.40-2.el7.noarch.rpmrpm -ivh perl-5.16.3-291.el7.x86_64.rpmrpm -ivh pdsh-rcmd-ssh-2.31-1.el7.x86_64.rpmrpm -ivh pdsh-2.31-1.el7.x86_64.rpm—————–mysql——————–清除mariadb版本的mysql-libsyum remove mysql-libsrpm -ivh net-tools-2.0-0.17.20131004git.el7.x86_64.rpmrpm -ivh mysql-community-common-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-libs-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-libs-compat-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-client-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-server-5.7.19-1.el7.x86_64.rpm初始化mysqlmysqld –initialize-insecure –user=mysqlsystemctl start mysqld#设置mysql的root密码mysql -u root –skip-password—————–ambari——————–install ambarirpm -ivh postgresql-libs-9.2.18-1.el7.x86_64.rpmrpm -ivh postgresql-9.2.18-1.el7.x86_64.rpmrpm -ivh postgresql-server-9.2.18-1.el7.x86_64.rpmrpm -ivh ambari-server-2.5.1.0-159.x86_64.rpmstop firewalldsystemctl stop firewalldsystemctl disable firewallddisable SELINUXsed -i ‘s/SELINUX=enforcing/SELINUX=disabled/g’ /etc/selinux/configJAVA_HOMEcat &gt;&gt; /etc/profile &lt;&lt; EOFBEGIN ANSIBLE JAVA ENVVARexport JAVA_HOME=/usr/java/jdkexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=$PATH:$JAVA_HOME/binEND ANSIBLE JAVA ENVVAREOFecho ‘#LANG’ &gt;&gt; /etc/profileecho ‘export LC_ALL=”zh_CN.GBK”‘ &gt;&gt; /etc/profileecho ‘export LANG=”zh_CN.GBK”‘ &gt;&gt; /etc/profileecho ‘’ &gt;&gt; /etc/profileecho ‘# BEGIN ANSIBLE JAVA ENVVAR ‘ &gt;&gt; /etc/profileecho ‘export JAVA_HOME=/usr/java/jdk’ &gt;&gt; /etc/profileecho ‘export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar’ &gt;&gt; /etc/profileecho ‘export PATH=$PATH:$JAVA_HOME/bin’ &gt;&gt; /etc/profileecho ‘# END ANSIBLE JAVA ENVVAR ‘ &gt;&gt; /etc/profilesource /etc/profilehostsecho ‘192.168.56.100 master.bigdata.com master’ &gt; /etc/hostsecho ‘192.168.56.101 slave1.bigdata.com slave1’ &gt;&gt; /etc/hostsecho ‘192.168.56.102 slave2.bigdata.com slave2’ &gt;&gt; /etc/hostsecho ‘192.168.56.103 slave3.bigdata.com slave3’ &gt;&gt; /etc/hostshttp://192.168.56.100:8080/api/v1/clusters/c1master.bigdata.comslave1.bigdata.comslave2.bigdata.comslave3.bigdata.commysql jdbc driverwget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.43.tar.gzmkdir -p /usr/share/javacp ./mysql-connector-java-5.1.43-bin.jar /usr/share/java/tar zxvf jdk-8u111-linux-x64.tar.gzln -s jdk1.8.0_111 jdksetup ambariambari-server setupstart ambariambari-server startambari-server stopHDPhttp://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.1.0/ambari-2.5.1.0-centos7.tar.gzhttp://public-repo-1.hortonworks.com/HDF/centos7/2.x/updates/2.6.1.0/HDP-2.6.1.0-centos7-rpm.tar.gzhttp://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.1.0/HDP-2.6.1.0-centos7-rpm.tar.gzhttp://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.21/repos/centos7/HDP-UTILS-1.1.0.21-centos7.tar.gzyum-plugin-priorities.noarch 0:1.1.31-40.el7rpm -ivh apr-1.4.8-3.el7.x86_64.rpmrpm -ivh apr-util-1.5.2-6.el7.x86_64.rpmrpm -ivh httpd-tools-2.4.6-45.el7.centos.4.x86_64.rpmrpm -ivh mailcap-2.1.41-2.el7.noarch.rpmrpm -ivh httpd-2.4.6-45.el7.centos.4.x86_64.rpmsystemctl start httpd.servicesystemctl status httpd.servicesystemctl restart httpd.serviceecho ‘/usr/sbin/apachectl start’ &gt;&gt; /etc/rc.d/rc.localchmod +x /etc/rc.d/rc.localhttp://192.168.56.90/HDP/centos7/http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.0.3http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.21/repos/centos7vi /etc/yum.repos.d/ambari.repo#VERSION_NUMBER=2.5.1.0-159[ambari-2.5.1.0]name=ambari Version - ambari-2.5.1.0#http:///Ambari-2.5.1.0/baseurl=http://master.bigdata.com/Ambari-2.5.1.0/centos7gpgcheck=0#gpgkey=http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.1.0/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1#VERSION_NUMBER=2.6.1.0-129[hdp-2.6.1.0]name=hdp Version - hdp-2.6.1.0baseurl=http://master.bigdata.com/hdp/HDP/centos7/gpgcheck=1gpgkey=http://master.bigdata.com/hdp/HDP/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1[HDP-UTILS-1.1.0.21]name=HDP-UTILS Version - HDP-UTILS-1.1.0.21baseurl=http://master.bigdata.com/hdp/HDP-UTILS-1.1.0.21/gpgcheck=1gpgkey=http://master.bigdata.com/hdp/HDP-UTILS-1.1.0.21/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1ssh-copy-id -i ~/.ssh/id_rsa.pub root@master.bigdata.comERR:Ambari Bootstrap process timed out. It was destroyed.rootyum install ntp正在安装 : autogen-libopts-5.18-5.el7.x86_64 1/3正在安装 : ntpdate-4.2.6p5-25.el7.centos.2.x86_64 2/3正在安装 : ntp-4.2.6p5-25.el7.centos.2.x86_64yum install chrony正在安装 : chrony-2.1.1-4.el7.centos.x86_64 1/1切回ntpd：systemctl disable chronyd.service -lsystemctl stop chronyd.service -lsystemctl status chronyd.service -lsystemctl restart ntpd.servicesystemctl status ntpd.servicesystemctl enable ntpd.servicentpq -pntpstat切回chronyd：systemctl stop ntpd.servicesystemctl disable ntpd.servicesystemctl enable chronyd.service -lsystemctl restart chronyd.service -lsystemctl status chronyd.service -lchronyc sourcestatschronyc sources -v[ambari@pcliu java]$ ambari-server setupUsing python /usr/bin/pythonSetup ambari-serverAmbari-server setup is run with root-level privileges, passwordless sudo access for some commands commands may be requiredChecking SELinux…SELinux status is ‘enabled’SELinux mode is ‘permissive’WARNING: SELinux is set to ‘permissive’ mode and temporarily disabled.OK to continue [y/n] (y)? yCustomize user account for ambari-server daemon [y/n] (n)? yEnter user account for ambari-server daemon (ambari):ambariERROR: Failed: [Errno 13] Permission deniedERROR: Exiting with exit code 4.REASON: Failed to create user. Exiting.[ambari@pcliu java]$ su root密码：[root@pcliu java]# ambari^C[root@pcliu java]# ^C[root@pcliu java]# ambari-server setupUsing python /usr/bin/pythonSetup ambari-serverChecking SELinux…SELinux status is ‘enabled’SELinux mode is ‘permissive’WARNING: SELinux is set to ‘permissive’ mode and temporarily disabled.OK to continue [y/n] (y)? yCustomize user account for ambari-server daemon [y/n] (n)? yEnter user account for ambari-server daemon (ambari):ambariAdjusting ambari-server permissions and ownership…Checking firewall status…Checking JDK…Do you want to change Oracle JDK [y/n] (n)? y[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8[2] Oracle JDK 1.7 + Java Cryptography Extension (JCE) Policy Files 7[3] Custom JDKEnter choice (1): 3WARNING: JDK must be installed on all hosts and JAVA_HOME must be valid on all hosts.WARNING: JCE Policy files are required for configuring Kerberos security. If you plan to use Kerberos,please make sure JCE Unlimited Strength Jurisdiction Policy Files are valid on all hosts.Path to JAVA_HOME: /^HERROR: Exiting with exit code 1.REASON: Downloading or installing JDK failed: ‘Fatal exception: Java home path or java binary file is unavailable. Please put correct path to java home., exit code 1’. Exiting.[root@pcliu java]# ambari-server setupUsing python /usr/bin/pythonSetup ambari-serverChecking SELinux…SELinux status is ‘enabled’SELinux mode is ‘permissive’WARNING: SELinux is set to ‘permissive’ mode and temporarily disabled.OK to continue [y/n] (y)?Customize user account for ambari-server daemon [y/n] (n)? ^CAborting … Keyboard Interrupt.[root@pcliu java]# ambari-server setupUsing python /usr/bin/pythonSetup ambari-serverChecking SELinux…SELinux status is ‘enabled’SELinux mode is ‘permissive’WARNING: SELinux is set to ‘permissive’ mode and temporarily disabled.OK to continue [y/n] (y)? yCustomize user account for ambari-server daemon [y/n] (n)? yEnter user account for ambari-server daemon (ambari):ambariAdjusting ambari-server permissions and ownership…Checking firewall status…Checking JDK…Do you want to change Oracle JDK [y/n] (n)? y[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8[2] Oracle JDK 1.7 + Java Cryptography Extension (JCE) Policy Files 7[3] Custom JDKEnter choice (1): 3WARNING: JDK must be installed on all hosts and JAVA_HOME must be valid on all hosts.WARNING: JCE Policy files are required for configuring Kerberos security. If you plan to use Kerberos,please make sure JCE Unlimited Strength Jurisdiction Policy Files are valid on all hosts.Path to JAVA_HOME: /usr/java/jdkValidating JDK on Ambari Server…done.Completing setup…Configuring database…Enter advanced database configuration [y/n] (n)? yConfiguring database…Choose one of the following options:[1] - PostgreSQL (Embedded)[2] - Oracle[3] - MySQL / MariaDB[4] - PostgreSQL[5] - Microsoft SQL Server (Tech Preview)[6] - SQL Anywhere[7] - BDBEnter choice (3): 3Hostname (pcliu): pcliuPort (3306):Database name (ambari): ambariUsername (ambari): ambariEnter Database Password (ambari):Configuring ambari database…Configuring remote database connection properties…WARNING: Before starting Ambari Server, you must run the following DDL against the database to create the schema: /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sqlProceed with configuring remote database connection properties [y/n] (y)yExtracting system views……………Adjusting ambari-server permissions and ownership…Ambari Server ‘setup’ completed successfully.ambari-server setup –jdbc-db=mysql –jdbc-driver=python /usr/lib/python2.6/site-packages/ambari_agent/HostCleanup.py –silent –skip=usersdfs.client.read.shortcircuitdfs.client.read.shortcircuithbase.rootdir = file:///var/var/lib/ambari-metrics-collector/hbasehbase.tmp.dir=/var/lib/ambari-metrics-collector/hbase-tmpmkdir -p /apdata/ambari/hbase/mkdir -p /apdata/ambari/hbase/tmpZooKeeper directory = /appdata/ambari/zookeeper/dataZooKeeper Log Dir= /appdata/ambari/zookeeper/logZooKeeper PID Dir= /appdata/ambari/zookeeper/pidMetrics Collector log dir = /appdata/ambari/metrics/collector/logMetrics Collector pid dir = /appdata/ambari/metrics/collector/pidMetrics Monitor log dir = /appdata/ambari/metrics/monitor/logMetrics Collector pid dir = /appdata/ambari/metrics/monitor/pidAggregator checkpoint directory =/appdata/ambari/metrics/collector/checkpointMetrics Grafana data dir = /appdata/ambari/metrics/grafana/dataMetrics Grafana log dir = /appdata/ambari/metrics/grafana/logMetrics Grafana pid dir = /appdata/ambari/metrics/grafana/pidhdfs://master.bigdata.com:8020/amshbasehbase_log_dir = /appdata/ambari/metrics/collector/loghbase_pid_dir = /appdata/ambari/metrics/collector/hbase_pidhbase.rootdir = /appdata/ambari/metrics/collector/hbase/datahbase.tmp.dir = /appdata/ambari/metrics/collector/hbase/data/tmp/var/log/ambari-metrics-collector/appdata/ambari/metrics/collector/log##HDFSNameNode = /appdata/ambari/hadoop/hdfs/namenode,/opt/ambari/hadoop/hdfs/namenodeDataNode = /appdata/ambari/hadoop/hdfs/data,/opt/ambari/hadoop/hdfs/datadfs.journalnode.edits.dir= /appdata/ambari/hadoop/hdfs/journalnodefs.defaultFS=hdfs://master.bigdata.com:8020a]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>Centos7, Ambari</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos7 在线安装 Ambari]]></title>
    <url>%2Flogs%2Fcentos7_install_ambari_node_6%2F</url>
    <content type="text"><![CDATA[Centos7 64位 在线安装 Ambaricentos7 在线安装 ambari系统环境，6台虚拟机，3台作为master节点，3台作为slave节点关防火墙，关SELINUX(注：关SELINUX需要重启才会有效)123systemctl stop firewalldsystemctl disable firewalldsed -i &apos;s/SELINUX=enforcing/SELINUX=disabled/g&apos; /etc/selinux/config网络配置1234567891011cat &gt; /etc/hosts &lt;&lt; EOF192.168.56.21 master1.bigdata.com master1192.168.56.22 master2.bigdata.com master2192.168.56.23 master3.bigdata.com master3192.168.56.24 slave1.bigdata.com slave1192.168.56.25 slave2.bigdata.com slave2192.168.56.26 slave3.bigdata.com slave3192.168.56.27 slave4.bigdata.com slave4EOFsed -i &apos;s/localhost.localdomain/master2/g&apos; /etc/hostnamejava环境 :安装目录: /usr/java/jdk 版本：jdk1.8.0_11112345678910111213echo &apos;#LANG&apos; &gt;&gt; /etc/profileecho &apos;#export LC_ALL=&quot;zh_CN.GBK&quot;&apos; &gt;&gt; /etc/profileecho &apos;export LANG=&quot;zh_CN.GBK&quot;&apos; &gt;&gt; /etc/profilecat &gt;&gt; /etc/profile &lt;&lt; EOF# BEGIN ANSIBLE JAVA ENVVARexport JAVA_HOME=/usr/java/jdkexport CLASSPATH=.:\$JAVA_HOME/jre/lib/rt.jar:\$JAVA_HOME/lib/dt.jar:\$JAVA_HOME/lib/tools.jarexport PATH=\$PATH:\$JAVA_HOME/bin# END ANSIBLE JAVA ENVVAR EOFln -s /usr/java/jdk1.8.0_111 /usr/java/jdkmysql 环境 mysql 5.7先创建repo文件，然后yum install 安装1234567891011121314151617181920# 创建mysql.repocat &gt;&gt; /etc/yum.repos.d/mysql-community.repo &lt;&lt; EOF[mysql57-community]name=MySQL 5.7 Community Serverbaseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/\$basearch/enabled=1gpgcheck=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysqlEOF# 安装mysqlyum repolist all | grep mysqlyum install mysql-community-server# 初始化mysqlmysqld --initialize-insecure --user=mysqlsystemctl start mysqld#设置mysql的root密码(mysql)mysql -u root --skip-password#mysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;mysql&apos;;更改yum源镜像地址1234# 备份mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup# 获取repowget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repoambari 安装由于ambari的源在国外，下载速度过慢，容易出现安装失败的情况，因此先建立本地源，之后从本地源进行安装，采用httpd来建立源服务器通常来说需要建的源有:ambari本地源、HDP本地源、HDP-UTILS本地源httpd服务搭建123456789101112131415# 安装httpdyum install httpd# 启动httpdsystemctl start httpd.servicesystemctl status httpd.service# 设置开机自启echo &apos;/usr/sbin/apachectl start&apos; &gt;&gt; /etc/rc.d/rc.localchmod +x /etc/rc.d/rc.local# 设置http文件根目录cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.baksed -i &apos;s/&quot;\/var\/www\/html&quot;/&quot;\/appdata\/httpd\/www\/html&quot;/g&apos; /etc/httpd/conf/httpd.confdiff /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.bak搭建本地源：ambari、HDP、HDP-UTILS源源文件下载地址:Ambari源 :http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.1.0/ambari-2.5.1.0-centos7.tar.gzHDP源 :http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.1.0/HDP-2.6.1.0-centos7-rpm.tar.gzHDP-UTILS源 :http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.21/repos/centos7/HDP-UTILS-1.1.0.21-centos7.tar.gz1234# 如果使用wget下载很慢，可以尝试使用迅雷等下载工具下载，之后上传wget http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.1.0/ambari-2.5.1.0-centos7.tar.gzwget http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.1.0/HDP-2.6.1.0-centos7-rpm.tar.gzwget http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.21/repos/centos7/HDP-UTILS-1.1.0.21-centos7.tar.gz将下载的文件拷贝到httpd服务的DocumentRoot目录12345678# DocumentRoot=/appdata/httpd/www/html# 拷贝文件mkdir -p /appdata/httpd/www/html/ambari/ambari-2.5.1.0/mkdir -p /appdata/httpd/www/html/hdp/HDP-2.6.1.0/mkdir -p /appdata/httpd/www/html/hdp/HDP-UTILS-1.1.0.21/tar zxvf ambari-2.5.1.0-centos7.tar.gz -C /appdata/httpd/www/html/ambari/ambari-2.5.1.0/tar zxvf HDP-2.6.1.0-centos7-rpm.tar.gz -C /appdata/httpd/www/html/hdp/HDP-2.6.1.0/tar zxvf HDP-UTILS-1.1.0.21-centos7.tar.gz -C /appdata/httpd/www/html/hdp/HDP-UTILS-1.1.0.21/创建ambari、HDP、HDP-UTILS源的repo文件123456789101112131415161718192021222324252627cat &gt; /etc/yum.repos.d/ambari.repo &lt;&lt; EOF#VERSION_NUMBER=2.5.1.0-159[ambari-2.5.1.0]name=ambari Version - ambari-2.5.1.0#http://&lt;web.server&gt;/Ambari-2.5.1.0/&lt;OS&gt;baseurl=http://master1.bigdata.com/ambari/ambari-2.5.1.0/ambari/centos7gpgcheck=1gpgkey=http://master1.bigdata.com/ambari/ambari-2.5.1.0/ambari/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1[hdp-2.6.1.0]name=HDP Version - HDP-2.6.1.0baseurl=http://master1.bigdata.com/hdp/HDP-2.6.1.0/HDP/centos7/gpgcheck=1gpgkey=http://master1.bigdata.com/hdp/HDP-2.6.1.0/HDP/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1[HDP-UTILS-1.1.0.21]name=HDP-UTILS Version - HDP-UTILS-1.1.0.21baseurl=http://master1.bigdata.com/hdp/HDP-UTILS-1.1.0.21/gpgcheck=1gpgkey=http://master1.bigdata.com/hdp/HDP-UTILS-1.1.0.21/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1EOF查看本地源安装结果,如果status-意为源中的rpm包的数目，如果大于0代表获取源信息成功12345678910111213141516171819[root@master1 centos7]# yum repolist Loaded plugins: fastestmirror, langpacksHDP-UTILS-1.1.0.21 | 2.9 kB 00:00:00 ambari-2.5.1.0 | 2.9 kB 00:00:00 hdp-2.6.1.0 | 2.9 kB 00:00:00 ambari-2.5.1.0/primary_db | 8.6 kB 00:00:00 Loading mirror speeds from cached hostfile * base: mirrors.aliyun.com * extras: mirrors.aliyun.com * updates: mirrors.aliyun.comrepo id repo name statusHDP-UTILS-1.1.0.21 HDP-UTILS Version - HDP-UTILS-1.1.0.21 64ambari-2.5.1.0 ambari Version - ambari-2.5.1.0 12base/7/x86_64 CentOS-7 - Base - mirrors.aliyun.com 9,363extras/7/x86_64 CentOS-7 - Extras - mirrors.aliyun.com 449hdp-2.6.1.0 HDP Version - HDP-2.6.1.0 232mysql57-community/x86_64 MySQL 5.7 Community Server 207updates/7/x86_64 CentOS-7 - Updates - mirrors.aliyun.com 2,146repolist: 12,473安装Ambariyum repolist all | grep ambariyum install ambari-server在mysql数据库中创建ambari数据库为ambari-server setup做准备，在mysql数据库中创建ambari数据库创建ambari数据脚本1234567891011cat &gt;&gt; create_ambari.sql &lt;&lt; EOFcreate database ambari;use ambari;CREATE USER &apos;ambari&apos;@&apos;%&apos; IDENTIFIED BY &apos;ambari&apos;;GRANT ALL PRIVILEGES ON *.* TO &apos;ambari&apos;@&apos;%&apos;;CREATE USER &apos;ambari&apos;@&apos;master1.bigdata.com&apos; IDENTIFIED BY &apos;ambari&apos;;GRANT ALL PRIVILEGES ON *.* TO &apos;ambari&apos;@&apos;master1.bigdata.com&apos;;CREATE USER &apos;ambari&apos;@&apos;ambari&apos; IDENTIFIED BY &apos;ambari&apos;;GRANT ALL PRIVILEGES ON *.* TO &apos;ambari&apos;@&apos;ambari&apos;;FLUSH PRIVILEGES;EOF执行脚本创建ambari数据库12345# source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql; 安装Ambari时已经创建好文件mysql -u root -pmysql&gt; source create_ambari.sql;mysql&gt; source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql;mysql&gt; exit;JDBC驱动将mysql-jcdb驱动拷贝到/usr/share/java目录,配置/etc/ambari-server/conf/ambari.properties文件1echo &quot;server.jdbc.driver.path=/usr/share/java/mysql-connector-java-5.1.43-bin.jar&quot; &gt;&gt; /etc/ambari-server/conf/ambari.propertiessetup ambariambari-server setup12345678Customize user account for ambari-server daemon [y/n] (n)? n :选择否，如果选择非root用户安装，需要额外配置权限，否则会报错详情参考[Configuring Ambari for non-root access](https://www.ibm.com/support/knowledgecenter/en/SSPT3X_4.2.0/com.ibm.swg.im.infosphere.biginsights.install.doc/doc/inst_non_root.html)Do you want to change Oracle JDK [y/n] (n)? y :选择自定义JDK,Path to JAVA_HOME: /usr/java/jdkEnter advanced database configuration [y/n] (n)? y :选择高级选项,选择[3] - MySQL / MariaDBEnter choice (1): 3Hostname (localhost): master1.bigdata.comPort (3306): 3306Database name (ambari): ambariUsername (ambari): ambaristart ambariambari-server start浏览器打开http://192.168.56.10:8080/，是否能正常访问，用户名/密码:admin/adminambari-server stop建立ssh面壁登录在master1、master2上执行1234567ssh-keygen -t rsa (-t:type密钥类型)ssh-copy-id -i ~/.ssh/id_rsa.pub root@master1.bigdata.comssh-copy-id -i ~/.ssh/id_rsa.pub root@master2.bigdata.comssh-copy-id -i ~/.ssh/id_rsa.pub root@slave1.bigdata.comssh-copy-id -i ~/.ssh/id_rsa.pub root@slave2.bigdata.comssh-copy-id -i ~/.ssh/id_rsa.pub root@slave3.bigdata.comssh-copy-id -i ~/.ssh/id_rsa.pub root@slave4.bigdata.com选择Use Local Repository值与/etc/yum.repos.d/ambari.repo文件里配的一致选择Target Hosts传入rsa私钥: ~/.ssh/id_rsa(注意是id_rsa里面的值，而不是公钥)启用chronyd1234567# 所有机器均需执行，用于调整内核中运行的系统时钟和时钟服务器同步systemctl enable chronyd.service -lsystemctl restart chronyd.service -lsystemctl status chronyd.service -l# 查看结果chronyc sourcestatschronyc sources -vAssign Slaves and ClientsPrerequisites installPrerequisites installyum install rpmyum install curlyum install wgetwget -p ~/ http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpmrpm -ivh ~/epel-release-latest-7.noarch.rpmrm -f ~/epel-release-latest-7.noarch.rpmyum install pdshinstall mysql192.168.56.10 master1.bigdata.com master1192.168.56.11 master2.bigdata.com master2192.168.56.12 slave1.bigdata.com slave1192.168.56.13 slave2.bigdata.com slave2192.168.56.14 slave3.bigdata.com slave3192.168.56.15 slave4.bigdata.com slave4mysql repocat &gt;&gt; /etc/yum.repos.d/mysql-community.repo &lt;&lt; EOF[mysql57-community]name=MySQL 5.7 Community Serverbaseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/$basearch/enabled=1gpgcheck=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysqlEOFyum repolist all | grep mysqlyum install mysql-community-servermysql_repo=”/etc/yum.repos.d/mysql-community.repo”echo ‘[mysql57-community]’ &gt; “$mysql_repo”echo ‘name=MySQL 5.7 Community Server’ &gt;&gt; “$mysql_repo”echo ‘baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/$basearch/‘ &gt;&gt; “$mysql_repo”echo ‘enabled=1’ &gt;&gt; “$mysql_repo”echo ‘gpgcheck=0’ &gt;&gt; “$mysql_repo”echo ‘gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql’ &gt;&gt; “$mysql_repo”yum repolist all | grep mysqlyum install mysql-community-serverambariwget -O /etc/yum.repos.d/ambari.repo http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.1.0/ambari.repoyum install ambari-server -y#创建用户:ambari,修改用户密码为ambariuseradd ambariecho “ambari:ambari” | chpasswdstop firewalldsystemctl stop firewallddisable SELINUXsed -i ‘s/SELINUX=enforcing/SELINUX=disabled/g’ /etc/selinux/configenable cashsed -i ‘s/keepcache=0/keepcache=1/g’ /etc/yum.confJAVA_HOMEecho ‘#LANG’ &gt;&gt; /etc/profileecho ‘export LC_ALL=”zh_CN.GBK”‘ &gt;&gt; /etc/profileecho ‘export LANG=”zh_CN.GBK”‘ &gt;&gt; /etc/profileecho ‘’ &gt;&gt; /etc/profileecho ‘# BEGIN ANSIBLE JAVA ENVVAR ‘ &gt;&gt; /etc/profileecho ‘export JAVA_HOME=/usr/java/jdk’ &gt;&gt; /etc/profileecho ‘export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar’ &gt;&gt; /etc/profileecho ‘export PATH=$PATH:$JAVA_HOME/bin’ &gt;&gt; /etc/profileecho ‘# END ANSIBLE JAVA ENVVAR ‘ &gt;&gt; /etc/profilemysql jdbc driverwget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.43.tar.gztar zxvf mysql-connector-java-5.1.43.tar.gzmkdir -p /usr/share/javacp ./mysql-connector-java-5.1.43/mysql-connector-java-5.1.43-bin.jar /usr/share/java/rm -rf mysql-connector-java-5.1.43.tar.gz mysql-connector-java-5.1.43amb_profile=”/etc/ambari-server/conf/ambari.properties”echo “server.jdbc.driver.path=/usr/share/java/mysql-connector-java-5.1.43-bin.jar” &gt;&gt; “${amb_profile}”#create the schemaecho “create database ambari;”echo “mysql&gt; use ambari;”echo ‘mysql&gt; CREATE USER ‘ambari’@’%’ IDENTIFIED BY ‘ambari’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘ambari’@’%’;’echo ‘mysql&gt; CREATE USER ‘ambari’@’master.bigdata.com’ IDENTIFIED BY ‘ambari’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘ambari’@’master.bigdata.com’;’echo ‘mysql&gt; CREATE USER ‘ambari’@’ambari’ IDENTIFIED BY ‘ambari’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘ambari’@’ambari’;’echo ‘mysql&gt; FLUSH PRIVILEGES;’echo “mysql&gt; source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql”mysql -uroot -pecho “create database hive;”echo “mysql&gt; use hive”echo ‘mysql&gt; CREATE USER ‘hive’@’%’ IDENTIFIED BY ‘hive’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘hive’@’%’;’echo ‘mysql&gt; CREATE USER ‘hive’@’master.bigdata.com’ IDENTIFIED BY ‘hive’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘hive’@’master.bigdata.com’;’echo ‘mysql&gt; CREATE USER ‘hive’@’hive’ IDENTIFIED BY ‘hive’;’echo ‘mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘hive’@’hive’;’echo ‘mysql&gt; FLUSH PRIVILEGES;’echo “mysql&gt; source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql”mysql -uroot -psystemctl restart mysqldsetup ambariambari-server setupstart ambarisu - ambariambari-server startambari-server stop#HDP SITE https://docs.hortonworks.com/HDPDocuments/Ambari-2.5.1.0/bk_ambari-installation/content/hdp_26_repositories.htmlyum install httpdwget http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.1.0/HDP-2.6.1.0-centos7-rpm.tar.gzwget http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.21/repos/centos7/HDP-UTILS-1.1.0.21-centos7.tar.gzstop firewalldsystemctl stop firewalldsystemctl disable firewallddisable SELINUXsed -i ‘s/SELINUX=enforcing/SELINUX=disabled/g’ /etc/selinux/config—————–rpm——————–rpm -ivh rpm-libs-4.11.3-21.el7.x86_64.rpmrpm -ivh rpm-4.11.3-21.el7.x86_64.rpmrpm -ivh rpm-build-libs-4.11.3-21.el7.x86_64.rpmrpm -ivh rpm-python-4.11.3-21.el7.x86_64.rpm—————–curl——————–rpm -ivh libcurl-7.29.0-35.el7.centos.x86_64.rpmrpm -ivh curl-7.29.0-35.el7.centos.x86_64.rpm—————–wget——————–rpm -ivh wget-1.14-13.el7.x86_64.rpm—————–pdsh——————–rpm -ivh perl-parent-0.225-244.el7.noarch.rpmrpm -ivh perl-HTTP-Tiny-0.033-3.el7.noarch.rpmrpm -ivh perl-podlators-2.5.1-3.el7.noarch.rpmrpm -ivh perl-Pod-Perldoc-3.20-4.el7.noarch.rpmrpm -ivh perl-Pod-Escapes-1.04-291.el7.noarch.rpmrpm -ivh perl-Encode-2.51-7.el7.x86_64.rpmrpm -ivh perl-Text-ParseWords-3.29-4.el7.noarch.rpmrpm -ivh perl-Pod-Usage-1.63-3.el7.noarch.rpmrpm -ivh perl-Storable-2.45-3.el7.x86_64.rpmrpm -ivh perl-Exporter-5.68-3.el7.noarch.rpmrpm -ivh perl-constant-1.27-2.el7.noarch.rpmrpm -ivh perl-Time-Local-1.2300-2.el7.noarch.rpmrpm -ivh perl-Socket-2.010-4.el7.x86_64.rpmrpm -ivh perl-Carp-1.26-244.el7.noarch.rpmrpm -ivh perl-Time-HiRes-1.9725-3.el7.x86_64.rpmrpm -ivh perl-Pod-Simple-3.28-4.el7.noarch.rpmrpm -ivh perl-PathTools-3.40-5.el7.x86_64.rpmrpm -ivh perl-Scalar-List-Utils-1.27-248.el7.x86_64.rpmrpm -ivh perl-libs-5.16.3-291.el7.x86_64.rpmrpm -ivh perl-macros-5.16.3-291.el7.x86_64.rpmrpm -ivh perl-File-Temp-0.23.01-3.el7.noarch.rpmrpm -ivh perl-File-Path-2.09-2.el7.noarch.rpmrpm -ivh perl-threads-shared-1.43-6.el7.x86_64.rpmrpm -ivh perl-threads-1.87-4.el7.x86_64.rpmrpm -ivh perl-Filter-1.49-3.el7.x86_64.rpmrpm -ivh perl-Getopt-Long-2.40-2.el7.noarch.rpmrpm -ivh perl-5.16.3-291.el7.x86_64.rpmrpm -ivh pdsh-rcmd-ssh-2.31-1.el7.x86_64.rpmrpm -ivh pdsh-2.31-1.el7.x86_64.rpm—————–mysql——————–清除mariadb版本的mysql-libsyum remove mysql-libsrpm -ivh net-tools-2.0-0.17.20131004git.el7.x86_64.rpmrpm -ivh mysql-community-common-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-libs-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-libs-compat-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-client-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-server-5.7.19-1.el7.x86_64.rpm初始化mysqlmysqld –initialize-insecure –user=mysqlsystemctl start mysqld#设置mysql的root密码mysql -u root –skip-password—————–ambari——————–install ambarirpm -ivh postgresql-libs-9.2.18-1.el7.x86_64.rpmrpm -ivh postgresql-9.2.18-1.el7.x86_64.rpmrpm -ivh postgresql-server-9.2.18-1.el7.x86_64.rpmrpm -ivh ambari-server-2.5.1.0-159.x86_64.rpmstop firewalldsystemctl stop firewalldsystemctl disable firewallddisable SELINUXsed -i ‘s/SELINUX=enforcing/SELINUX=disabled/g’ /etc/selinux/configJAVA_HOMEcat &gt;&gt; /etc/profile &lt;&lt; EOFBEGIN ANSIBLE JAVA ENVVARexport JAVA_HOME=/usr/java/jdkexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=$PATH:$JAVA_HOME/binEND ANSIBLE JAVA ENVVAREOFecho ‘#LANG’ &gt;&gt; /etc/profileecho ‘export LC_ALL=”zh_CN.GBK”‘ &gt;&gt; /etc/profileecho ‘export LANG=”zh_CN.GBK”‘ &gt;&gt; /etc/profileecho ‘’ &gt;&gt; /etc/profileecho ‘# BEGIN ANSIBLE JAVA ENVVAR ‘ &gt;&gt; /etc/profileecho ‘export JAVA_HOME=/usr/java/jdk’ &gt;&gt; /etc/profileecho ‘export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar’ &gt;&gt; /etc/profileecho ‘export PATH=$PATH:$JAVA_HOME/bin’ &gt;&gt; /etc/profileecho ‘# END ANSIBLE JAVA ENVVAR ‘ &gt;&gt; /etc/profilesource /etc/profilehostsecho ‘192.168.56.100 master.bigdata.com master’ &gt; /etc/hostsecho ‘192.168.56.101 slave1.bigdata.com slave1’ &gt;&gt; /etc/hostsecho ‘192.168.56.102 slave2.bigdata.com slave2’ &gt;&gt; /etc/hostsecho ‘192.168.56.103 slave3.bigdata.com slave3’ &gt;&gt; /etc/hostshttp://192.168.56.100:8080/api/v1/clusters/c1master.bigdata.comslave1.bigdata.comslave2.bigdata.comslave3.bigdata.commysql jdbc driverwget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.43.tar.gzmkdir -p /usr/share/javacp ./mysql-connector-java-5.1.43-bin.jar /usr/share/java/tar zxvf jdk-8u111-linux-x64.tar.gzln -s jdk1.8.0_111 jdksetup ambariambari-server setupstart ambariambari-server startambari-server stopHDPhttp://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.1.0/ambari-2.5.1.0-centos7.tar.gzhttp://public-repo-1.hortonworks.com/HDF/centos7/2.x/updates/2.6.1.0/HDP-2.6.1.0-centos7-rpm.tar.gzhttp://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.1.0/HDP-2.6.1.0-centos7-rpm.tar.gzhttp://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.21/repos/centos7/HDP-UTILS-1.1.0.21-centos7.tar.gzyum-plugin-priorities.noarch 0:1.1.31-40.el7rpm -ivh apr-1.4.8-3.el7.x86_64.rpmrpm -ivh apr-util-1.5.2-6.el7.x86_64.rpmrpm -ivh httpd-tools-2.4.6-45.el7.centos.4.x86_64.rpmrpm -ivh mailcap-2.1.41-2.el7.noarch.rpmrpm -ivh httpd-2.4.6-45.el7.centos.4.x86_64.rpmsystemctl start httpd.servicesystemctl status httpd.servicesystemctl restart httpd.serviceecho ‘/usr/sbin/apachectl start’ &gt;&gt; /etc/rc.d/rc.localchmod +x /etc/rc.d/rc.localhttp://192.168.56.90/HDP/centos7/http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.0.3http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.21/repos/centos7vi /etc/yum.repos.d/ambari.repo#VERSION_NUMBER=2.5.1.0-159[ambari-2.5.1.0]name=ambari Version - ambari-2.5.1.0#http:///Ambari-2.5.1.0/baseurl=http://master.bigdata.com/Ambari-2.5.1.0/centos7gpgcheck=0#gpgkey=http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.5.1.0/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1#VERSION_NUMBER=2.6.1.0-129[hdp-2.6.1.0]name=hdp Version - hdp-2.6.1.0baseurl=http://master.bigdata.com/hdp/HDP/centos7/gpgcheck=1gpgkey=http://master.bigdata.com/hdp/HDP/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1[HDP-UTILS-1.1.0.21]name=HDP-UTILS Version - HDP-UTILS-1.1.0.21baseurl=http://master.bigdata.com/hdp/HDP-UTILS-1.1.0.21/gpgcheck=1gpgkey=http://master.bigdata.com/hdp/HDP-UTILS-1.1.0.21/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1ssh-copy-id -i ~/.ssh/id_rsa.pub root@master.bigdata.comERR:Ambari Bootstrap process timed out. It was destroyed.rootyum install ntp正在安装 : autogen-libopts-5.18-5.el7.x86_64 1/3正在安装 : ntpdate-4.2.6p5-25.el7.centos.2.x86_64 2/3正在安装 : ntp-4.2.6p5-25.el7.centos.2.x86_64yum install chrony正在安装 : chrony-2.1.1-4.el7.centos.x86_64 1/1切回ntpd：systemctl disable chronyd.service -lsystemctl stop chronyd.service -lsystemctl status chronyd.service -lsystemctl restart ntpd.servicesystemctl status ntpd.servicesystemctl enable ntpd.servicentpq -pntpstat切回chronyd：systemctl stop ntpd.servicesystemctl disable ntpd.servicesystemctl enable chronyd.service -lsystemctl restart chronyd.service -lsystemctl status chronyd.service -lchronyc sourcestatschronyc sources -v[ambari@pcliu java]$ ambari-server setupUsing python /usr/bin/pythonSetup ambari-serverAmbari-server setup is run with root-level privileges, passwordless sudo access for some commands commands may be requiredChecking SELinux…SELinux status is ‘enabled’SELinux mode is ‘permissive’WARNING: SELinux is set to ‘permissive’ mode and temporarily disabled.OK to continue [y/n] (y)? yCustomize user account for ambari-server daemon [y/n] (n)? yEnter user account for ambari-server daemon (ambari):ambariERROR: Failed: [Errno 13] Permission deniedERROR: Exiting with exit code 4.REASON: Failed to create user. Exiting.[ambari@pcliu java]$ su root密码：[root@pcliu java]# ambari^C[root@pcliu java]# ^C[root@pcliu java]# ambari-server setupUsing python /usr/bin/pythonSetup ambari-serverChecking SELinux…SELinux status is ‘enabled’SELinux mode is ‘permissive’WARNING: SELinux is set to ‘permissive’ mode and temporarily disabled.OK to continue [y/n] (y)? yCustomize user account for ambari-server daemon [y/n] (n)? yEnter user account for ambari-server daemon (ambari):ambariAdjusting ambari-server permissions and ownership…Checking firewall status…Checking JDK…Do you want to change Oracle JDK [y/n] (n)? y[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8[2] Oracle JDK 1.7 + Java Cryptography Extension (JCE) Policy Files 7[3] Custom JDKEnter choice (1): 3WARNING: JDK must be installed on all hosts and JAVA_HOME must be valid on all hosts.WARNING: JCE Policy files are required for configuring Kerberos security. If you plan to use Kerberos,please make sure JCE Unlimited Strength Jurisdiction Policy Files are valid on all hosts.Path to JAVA_HOME: /^HERROR: Exiting with exit code 1.REASON: Downloading or installing JDK failed: ‘Fatal exception: Java home path or java binary file is unavailable. Please put correct path to java home., exit code 1’. Exiting.[root@pcliu java]# ambari-server setupUsing python /usr/bin/pythonSetup ambari-serverChecking SELinux…SELinux status is ‘enabled’SELinux mode is ‘permissive’WARNING: SELinux is set to ‘permissive’ mode and temporarily disabled.OK to continue [y/n] (y)?Customize user account for ambari-server daemon [y/n] (n)? ^CAborting … Keyboard Interrupt.[root@pcliu java]# ambari-server setupUsing python /usr/bin/pythonSetup ambari-serverChecking SELinux…SELinux status is ‘enabled’SELinux mode is ‘permissive’WARNING: SELinux is set to ‘permissive’ mode and temporarily disabled.OK to continue [y/n] (y)? yCustomize user account for ambari-server daemon [y/n] (n)? yEnter user account for ambari-server daemon (ambari):ambariAdjusting ambari-server permissions and ownership…Checking firewall status…Checking JDK…Do you want to change Oracle JDK [y/n] (n)? y[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8[2] Oracle JDK 1.7 + Java Cryptography Extension (JCE) Policy Files 7[3] Custom JDKEnter choice (1): 3WARNING: JDK must be installed on all hosts and JAVA_HOME must be valid on all hosts.WARNING: JCE Policy files are required for configuring Kerberos security. If you plan to use Kerberos,please make sure JCE Unlimited Strength Jurisdiction Policy Files are valid on all hosts.Path to JAVA_HOME: /usr/java/jdkValidating JDK on Ambari Server…done.Completing setup…Configuring database…Enter advanced database configuration [y/n] (n)? yConfiguring database…Choose one of the following options:[1] - PostgreSQL (Embedded)[2] - Oracle[3] - MySQL / MariaDB[4] - PostgreSQL[5] - Microsoft SQL Server (Tech Preview)[6] - SQL Anywhere[7] - BDBEnter choice (3): 3Hostname (pcliu): pcliuPort (3306):Database name (ambari): ambariUsername (ambari): ambariEnter Database Password (ambari):Configuring ambari database…Configuring remote database connection properties…WARNING: Before starting Ambari Server, you must run the following DDL against the database to create the schema: /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sqlProceed with configuring remote database connection properties [y/n] (y)yExtracting system views……………Adjusting ambari-server permissions and ownership…Ambari Server ‘setup’ completed successfully.dfs.client.read.shortcircuitdfs.client.read.shortcircuithbase.rootdir = file:///var/var/lib/ambari-metrics-collector/hbasehbase.tmp.dir=/var/lib/ambari-metrics-collector/hbase-tmpmkdir -p /apdata/ambari/hbase/mkdir -p /apdata/ambari/hbase/tmpZooKeeper directory = /appdata/ambari/zookeeper/dataZooKeeper Log Dir= /appdata/ambari/zookeeper/logZooKeeper PID Dir= /appdata/ambari/zookeeper/pidMetrics Collector log dir = /appdata/ambari/metrics/collector/logMetrics Collector pid dir = /appdata/ambari/metrics/collector/pidMetrics Monitor log dir = /appdata/ambari/metrics/monitor/logMetrics Collector pid dir = /appdata/ambari/metrics/monitor/pidAggregator checkpoint directory =/appdata/ambari/metrics/collector/checkpointMetrics Grafana data dir = /appdata/ambari/metrics/grafana/dataMetrics Grafana log dir = /appdata/ambari/metrics/grafana/logMetrics Grafana pid dir = /appdata/ambari/metrics/grafana/pidhdfs://master.bigdata.com:8020/amshbasehbase_log_dir = /appdata/ambari/metrics/collector/loghbase_pid_dir = /appdata/ambari/metrics/collector/hbase_pidhbase.rootdir = /appdata/ambari/metrics/collector/hbase/datahbase.tmp.dir = /appdata/ambari/metrics/collector/hbase/data/tmp/var/log/ambari-metrics-collector/appdata/ambari/metrics/collector/log##HDFSNameNode = /appdata/ambari/hadoop/hdfs/namenode,/opt/ambari/hadoop/hdfs/namenodeDataNode = /appdata/ambari/hadoop/hdfs/data,/opt/ambari/hadoop/hdfs/datadfs.journalnode.edits.dir= /appdata/ambari/hadoop/hdfs/journalnodefs.defaultFS=hdfs://master.bigdata.com:8020a]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>Centos7, Ambari</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Centos7 安装Ansible]]></title>
    <url>%2Flogs%2Fcentos7_install_ansible%2F</url>
    <content type="text"><![CDATA[Centos7 64位 在线、离线安装Ansible系统环境系统：Centos7 64位rpm在线安装Ansible1234567# 安装EPEL源 yum install wgetwget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpmrpm -ivh epel-release-latest-7.noarch.rpm# 安装ansibleyum install ansiblerpm离线安装Ansible由于没有直观的网址下载rpm包，因此最简单的方法是新建一台最小化安装的CentOs7虚拟机，之后修改/etc/yum.conf，将keepcache=0修改为keepcache=1，之后使用在线安装的方式安装ansible，在cash目录：cachedir=/var/cache/yum/下寻找所有的依赖包。根据在线安装的屏显顺序手工安装rpm包在线安装的屏显信息123456789101112131415161718192021Running transaction警告：RPM 数据库已被非 yum 程序修改。 正在安装 : python-six-1.9.0-2.el7.noarch 1/19 正在安装 : python2-ecdsa-0.13-4.el7.noarch 2/19 正在安装 : sshpass-1.06-1.el7.x86_64 3/19 正在安装 : python-babel-0.9.6-8.el7.noarch 4/19 正在安装 : libtommath-0.42.0-5.el7.x86_64 5/19 正在安装 : libtomcrypt-1.17-25.el7.x86_64 6/19 正在安装 : python2-crypto-2.6.1-13.el7.x86_64 7/19 正在安装 : python2-paramiko-1.16.1-2.el7.noarch 8/19 正在安装 : python-backports-1.0-8.el7.x86_64 9/19 正在安装 : python-backports-ssl_match_hostname-3.4.0.2-4.el7.noarch 10/19 正在安装 : python-setuptools-0.9.8-4.el7.noarch 11/19 正在安装 : python2-pyasn1-0.1.9-7.el7.noarch 12/19 正在安装 : python-keyczar-0.71c-2.el7.noarch 13/19 正在安装 : python-httplib2-0.7.7-3.el7.noarch 14/19 正在安装 : python-markupsafe-0.11-10.el7.x86_64 15/19 正在安装 : python-jinja2-2.7.2-2.el7.noarch 16/19 正在安装 : libyaml-0.1.4-11.el7_0.x86_64 17/19 正在安装 : PyYAML-3.10-11.el7.x86_64 18/19 正在安装 : ansible-2.3.1.0-1.el7.noarch 19/19离线安装脚本如下：1234567891011121314151617181920# 安装包名称即在上一步安装名称后加.rpm后缀（建议使用列编辑器编写安装脚本） rpm -ivh python-six-1.9.0-2.el7.noarch.rpmrpm -ivh python2-ecdsa-0.13-4.el7.noarch.rpmrpm -ivh sshpass-1.06-1.el7.x86_64.rpmrpm -ivh python-babel-0.9.6-8.el7.noarch.rpmrpm -ivh libtommath-0.42.0-5.el7.x86_64.rpmrpm -ivh libtomcrypt-1.17-25.el7.x86_64.rpmrpm -ivh python2-crypto-2.6.1-13.el7.x86_64.rpmrpm -ivh python2-paramiko-1.16.1-2.el7.noarch.rpmrpm -ivh python-backports-1.0-8.el7.x86_64.rpmrpm -ivh python-backports-ssl_match_hostname-3.4.0.2-4.el7.noarch.rpmrpm -ivh python-setuptools-0.9.8-4.el7.noarch.rpmrpm -ivh python2-pyasn1-0.1.9-7.el7.noarch.rpmrpm -ivh python-keyczar-0.71c-2.el7.noarch.rpmrpm -ivh python-httplib2-0.7.7-3.el7.noarch.rpmrpm -ivh python-markupsafe-0.11-10.el7.x86_64.rpmrpm -ivh python-jinja2-2.7.2-2.el7.noarch.rpmrpm -ivh libyaml-0.1.4-11.el7_0.x86_64.rpmrpm -ivh PyYAML-3.10-11.el7.x86_64.rpmrpm -ivh ansible-2.3.1.0-1.el7.noarch.rpm]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>Centos7, Ansible</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos7 离线rpm包安装 orcale 数据库]]></title>
    <url>%2Flogs%2Fcentos7_install_oracle%2F</url>
    <content type="text"><![CDATA[centos7 离线rpm包安装 orcale 数据库http://www.jianshu.com/p/36a78274a00e关闭selinux：sed -i ‘s/SELINUX=enforcing/SELINUX=disabled/g’ /etc/selinux/config关闭防火墙systemctl disable iptables安装oracle所需的软件包yum install gcc gcc-c++ glibc glibc-devel glibc-headers ksh libaio libaio-devel libgcc libstdc++ libstdc++-devel make sysstat unixODBC unixODBC-devel zlib-devel unzip compat-libcap1 compat-libstdc++-33添加Oracle用户组groupadd oinstallgroupadd dbagroupadd operuseradd -g oinstall -G dba,oper oracle修改系统参数vim /etc/sysctl.conf 添加如下内容，应用系统参数 sysctl -p参数通常与系统有关（本虚拟机内存2G）如fs.file-max = 6815744kernel.sem = 250 32000 100 128kernel.shmmni = 4096kernel.shmall = 1073741824kernel.shmmax = 4398046511104net.core.rmem_default = 262144net.core.rmem_max = 4194304net.core.wmem_default = 212992net.core.wmem_max = 1048576fs.aio-max-nr = 65536net.ipv4.ip_local_port_range = 9000 65500128G内存fs.file-max = 6815744kernel.sem = 250 32000 100 128kernel.shmmni = 4096kernel.shmall = 1073741824kernel.shmmax = 4398046511104net.core.rmem_default = 204800net.core.rmem_max = 212992net.core.wmem_default = 204800net.core.wmem_max = 212992fs.aio-max-nr = 1048576net.ipv4.ip_local_port_range = 9000 65500vi /etc/security/limits.conf 添加如下内容oracle soft nofile 1024oracle hard nofile 65536oracle soft nproc 2047oracle hard nproc 16384oracle soft stack 10240oracle hard stack 32768创建安装文件夹mkdir -p /opt/oracle/app/oracle/product/12.2.0/db_1chown oracle:oinstall /opt/oracle/ -R配置环境变量vim ~/.bash_profile添加如下内容export ORACLE_HOSTNAME=bdas1export ORACLE_BASE=/opt/oracle/app/oracle/export ORACLE_HOME=/opt/oracle/app/oracle/product/12.2.0/export ORACLE_SID=ORCLexport ORACLE_OWNER=oracleexport PATH=$PATH:$ORACLE_HOME/bin:$HOME/bin./runInstaller -silent -responseFile /opt/oracle/database/db_install.rsp创建数据库dbca -silent -createDatabase -templateName General_Purpose.dbc -gdbname orac.bdas1 -sid orac -responseFile NO_VALUE -characterSet AL32UTF8 -memoryPercentage 30 -emConfiguration LOCAL错误一：INFO: ERROR: [Result.addErrorDescription:703] PRVF-7573 : Sufficient swap size is not available on node “bdas1” [Required = 2.6944GB (2825286.0KB) ; Found = 2GB (2097148.0KB)]INFO: ERROR: [Result.addErrorDescription:714] PRVF-7573 : Sufficient swap size is not available on node “bdas1” [Required = 2.6944GB (2825286.0KB) ; Found = 2GB (2097148.0KB)]INFO: ERROR: [Result.addErrorDescription:714] PRVF-7573 : Sufficient swap size is not available on node “bdas1” [Required = 2.6944GB (2825286.0KB) ; Found = 2GB (2097148.0KB)]INFO: INFO: [Task.perform:819]TaskSwapSize:Swap Size[CHECK_SWAP_SIZE]:TASK_SUMMARY:FAILED:IGNORABLE:VERIFICATION_FAILED:Total time taken [40 Milliseconds]ERRORMSG(bdas1): PRVF-7573 : Sufficient swap size is not available on node “bdas1” [Required = 2.6944GB (2825286.0KB) ; Found = 2GB (2097148.0KB)]INFO: INFO: [Task.perform:688]增加swap空间通常来说swap空间为内存空间的两倍，本centos7虚拟机分配的内存为2G,swap空间应该为4G[oracle@bdas1 database]$ swapon -sFilename Type Size Used Priority/dev/dm-1 partition 2097148 0 -1[oracle@bdas1 database]$ freetotal used free shared buff/cache availableMem: 1883524 280476 1088488 8576 514560 1435616Swap: 2097148 0 2097148因此需要增加2G的swap空间dd if=/dev/zero of=/swap bs=1024 count=2097152(of=挂载目录，bs=单位数据块（block）同时读入/输出的块大小为1024 个字节，count=2048000，及有2G个块)mkswap /swap ：对交换文件格式化并转换为swap分区swapon /swap ：挂载并激活分区（会提示：swapon: /swap: insecure permissions 0644, 0600 suggested.）chmod -R 0600 /swap ：修改权限free -h ：查看结果问题二：SQL&gt; connect /as sysdbaConnected to an idle instance.SQL&gt; startupORA-00845: MEMORY_TARGET not supported on this system增加空间,将空间设为7G :执行mount -t tmpfs shmfs -o size=7g /dev/shm重启永久生效，vi /dev/shmtmpfs /dev/shm tmpfs defaults,size=10240M 0 0问题三：[oracle@bdas1 dbs]$ sqlplus / as sysdbaSQL&gt; startupORACLE instance started.Total System Global Area 1073741824 bytesFixed Size 8628936 bytesVariable Size 675284280 bytesDatabase Buffers 381681664 bytesRedo Buffers 8146944 bytesORA-00205: error in identifying control file, check alert log for more info错误日志查看： /opt/oracle/app/oracle/diag/rdbms/orcl/orac/trace/*.logOracle Database Installation Checklist1、Server Hardware Checklist for Oracle Database InstallationUse this checklist to check hardware requirements for Oracle Database.2、Operating System Checklist for Oracle Database Installation on LinuxUse this checklist to check minimum operating system requirements for Oracle Database.3、Server Configuration Checklist for Oracle Database InstallationUse this checklist to check minimum server configuration requirements for Oracle Database installations.4、Oracle User Environment Configuration Checklist for Oracle Database InstallationUse this checklist to plan operating system users, groups, and environments for Oracle Database management.5、Storage Checklist for Oracle Database InstallationUse this checklist to review storage minimum requirements and assist with configuration planning.6、Installer Planning Checklist for Oracle DatabaseUse this checklist to assist you to be prepared before starting Oracle Universal Installer.7、Deployment Checklist for Oracle DatabaseUse this checklist to decide the deployment method for a single-instance Oracle Database.http://docs.oracle.com/database/122/LADBI/checking-server-hardware-and-memory-configuration.htm#LADBI-GUID-DC04ABB6-1822-444A-AB1B-8C306079439CChecking Server Hardware and Memory Configuration1、Server Hardware Checklist for Oracle Database InstallationUse this checklist to check hardware requirements for Oracle Database.Checking Server Hardware and Memory Configurationgrep MemTotal /proc/meminfo2、Operating System Checklist for Oracle Database Installation on LinuxUse this checklist to check minimum operating system requirements for Oracle Database.3、Server Configuration Checklist for Oracle Database InstallationUse this checklist to check minimum server configuration requirements for Oracle Database installations.4、Oracle User Environment Configuration Checklist for Oracle Database InstallationUse this checklist to plan operating system users, groups, and environments for Oracle Database management.5、Storage Checklist for Oracle Database InstallationUse this checklist to review storage minimum requirements and assist with configuration planning.6、Installer Planning Checklist for Oracle DatabaseUse this checklist to assist you to be prepared before starting Oracle Universal Installer.7、Deployment Checklist for Oracle DatabaseUse this checklist to decide the deployment method for a single-instance Oracle Database.title: 个人博客搭建过程随手笔记date: 2017-07-22 02:50:38tags: Centos7,Mysqlcategory: logscentos7 离线rpm包安装mysql数据库系统环境系统：Centos7 64位Mysql版本：mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar 由于Centos7使用的是Redhat的内核版本，因此操作系统选择Red Hat Enterprise Linux/Oracle Linux注：所有的安装命令均在root用户下执行##安装包上传使用WinSCP等工具将下载好的mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar上传到Centos7的任意目录，如mkdir -p /opt/mysql 将文件上传到/opt/mysql目录 tar xvf mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar解压解压后结果如下：123456789101112131415[hadoop@bdas1 mysql]$ ls -lrttotal 1157956-rw-r--r--. 1 7155 31415 25085192 Jun 24 20:08 mysql-community-client-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 3778852 Jun 24 20:08 mysql-community-devel-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 278292 Jun 24 20:08 mysql-community-common-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 46236988 Jun 24 20:08 mysql-community-embedded-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 24077820 Jun 24 20:08 mysql-community-embedded-compat-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 128296360 Jun 24 20:09 mysql-community-embedded-devel-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 2238032 Jun 24 20:09 mysql-community-libs-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 2115696 Jun 24 20:09 mysql-community-libs-compat-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 55456196 Jun 24 20:09 mysql-community-minimal-debuginfo-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 171537176 Jun 24 20:09 mysql-community-server-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 15258732 Jun 24 20:09 mysql-community-server-minimal-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 118490200 Jun 24 20:10 mysql-community-test-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 root root 592865280 Jul 22 16:08 mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar##安装Mysql使用rpm安装包安装Mysql无需事先创建mysql用户和mysql用户组，安装的初始化过程程序会自动创建mysql的用户和用户组，这个自动创建的用户不允许使用shell等方式登录，其内部的创建命令如下123#无需创建用户和组shell&gt; groupadd mysqlshell&gt; useradd -r -g mysql -s /bin/false mysql安装前需要先检测系统里是否存在系统里是否已存在mysql,如果有需要先卸载12rpm -qa |grep mysqlyum remove mysql-community-libs-5.7.19-1.el7.x86_64此外还需使用删除机器上所有有关mysql的库文件（通常是mariadb的依赖库）使用find / -name mysql查找是否存在依赖库，使用yum remove mysql-libs删除依赖库123456[root@bdas1 mysql]# find / -name mysql/usr/lib64/mysql/usr/share/mysql/opt/mysql[root@bdas1 ~]# yum remove mysql-libs[root@bdas1 ~]# find / -name mysql通常来说只需安装四个rpm包即可，四个rpm是存在依赖的，因此需要按顺序安装1234rpm -ivh mysql-community-common-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-libs-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-client-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-server-5.7.19-1.el7.x86_64.rpm##初始化##mysql环境1、使用 –initialize参数 初始化时生成随机root密码,密码在/var/log/mysqld.log 日志文件中1234mysqld --initialize --user=mysqlsystemctl start mysqldmysql -u root -p (输入/var/log/mysqld.log文件中的密码)mysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;新密码&apos;;2、使用–initialize-insecure参数，初始化时不产生随机密码，之后再创建密码1234mysqld --initialize-insecure --user=mysqlsystemctl start mysqldmysql -u root --skip-passwordmysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;新密码&apos;;启动mysql数据库：Centos7启动系统服务的密令格式，相对Centos6有些不同，123456789#Centos 7systemctl start mysqldsystemctl stop mysqldsystemctl status mysqld#Centos 6service mysqld startservice mysqld stopservice mysqld status检测是否启动12345[root@bdas1 mysql]# netstat -ntlp | grep 3306tcp6 0 0 :::3306 :::* LISTEN 4692/mysqld [root@bdas1 sbin]# ps -ef|grep mysqlmysql 1593 1 0 21:25 ? 00:00:01 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pidroot 2775 2686 0 22:18 pts/0 00:00:00 grep --color=auto mysql修改Mysql数控datedir目录1、修改/etc/sysconfig/selinux将SELINUX的值修改为disabled （需要重启）123456# This file controls the state of SELinux on the system.# SELINUX= can take one of these three values:# enforcing - SELinux security policy is enforced.# permissive - SELinux prints warnings instead of enforcing.# disabled - No SELinux policy is loaded.SELINUX=disabled2、vi /etc/my.cnf修改datedir和socket123456789#datadir=/var/lib/mysql#socket=/var/lib/mysql/mysql.sockdatadir=/appdata/mysqlsocket=/appdata/mysql/mysql.sock#此外还需修改[client]的socket配置路径[client]socket=/appdata/mysql/mysql.sock3、将源datadir的目录拷贝到修改后的目的目录，并修改目录权限，最后建链接1234cp -rf /var/lib/mysql /appdata/mysqlcd /appdatachown -R mysql mysqlchgrp -R mysql mysql4、测试是否修改成功12systemctl start mysqldmysql -u root -p错误1：第一步中修改/etc/sysconfig/selinux文件中的SELINUX，没有重启，重启即可，日志信息如下12345678910111213141516171819[root@bdas1 appdata]# systemctl start mysqldJob for mysqld.service failed because the control process exited with error code. See &quot;systemctl status mysqld.service&quot; and &quot;journalctl -xe&quot; for details.[root@bdas1 appdata]# systemctl status mysqld.service● mysqld.service - MySQL Server Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled) Active: failed (Result: start-limit) since Sat 2017-07-22 23:22:56 CST; 5s ago Docs: man:mysqld(8) ....而且/var/log/mysqld.log文件错误如下2017-07-22T13:06:03.966795Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().2017-07-22T13:06:03.977001Z 0 [ERROR] InnoDB: Operating system error number 13 in a file operation.2017-07-22T13:06:03.977025Z 0 [ERROR] InnoDB: The error means mysqld does not have the access rights to the directory.2017-07-22T13:06:03.977028Z 0 [ERROR] InnoDB: os_file_get_status() failed on &apos;./ibdata1&apos;. Can&apos;t determine file permissions2017-07-22T13:06:03.977032Z 0 [ERROR] InnoDB: Plugin initialization aborted with error Generic error2017-07-22T13:06:04.585249Z 0 [ERROR] Plugin &apos;InnoDB&apos; init function returned error.2017-07-22T13:06:04.585284Z 0 [ERROR] Plugin &apos;InnoDB&apos; registration as a STORAGE ENGINE failed.2017-07-22T13:06:04.585290Z 0 [ERROR] Failed to initialize plugins.错误2：systemctl start mysqld命令正确执行，但是mysql登录报错，且日志如下12345678910[root@bdas1 sbin]# mysqlERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/var/lib/mysql/mysql.sock&apos; (2)解决方式有两种，推荐使用方式一1、增加clinet的socket目录设置，vi /etc/my.cnf，在文件末尾增加如下内容即可[client]socket=/appdata/mysql/mysql.sock2、建立链接ln -s /appdata/mysql/mysql.sock /var/lib/mysql/即可对于为什么需要建立链接不太清楚]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>Centos7,Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos7 离线rpm包安装mysql数据库]]></title>
    <url>%2Flogs%2Fcentos7_install_mysql%2F</url>
    <content type="text"><![CDATA[centos7 离线rpm包安装mysql数据库系统环境系统：Centos7 64位Mysql版本：mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar 由于Centos7使用的是Redhat的内核版本，因此操作系统选择Red Hat Enterprise Linux/Oracle Linux注：所有的安装命令均在root用户下执行##安装包上传使用WinSCP等工具将下载好的mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar上传到Centos7的任意目录，如mkdir -p /opt/mysql 将文件上传到/opt/mysql目录 tar xvf mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar解压解压后结果如下：123456789101112131415[hadoop@bdas1 mysql]$ ls -lrttotal 1157956-rw-r--r--. 1 7155 31415 25085192 Jun 24 20:08 mysql-community-client-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 3778852 Jun 24 20:08 mysql-community-devel-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 278292 Jun 24 20:08 mysql-community-common-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 46236988 Jun 24 20:08 mysql-community-embedded-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 24077820 Jun 24 20:08 mysql-community-embedded-compat-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 128296360 Jun 24 20:09 mysql-community-embedded-devel-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 2238032 Jun 24 20:09 mysql-community-libs-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 2115696 Jun 24 20:09 mysql-community-libs-compat-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 55456196 Jun 24 20:09 mysql-community-minimal-debuginfo-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 171537176 Jun 24 20:09 mysql-community-server-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 15258732 Jun 24 20:09 mysql-community-server-minimal-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 7155 31415 118490200 Jun 24 20:10 mysql-community-test-5.7.19-1.el7.x86_64.rpm-rw-r--r--. 1 root root 592865280 Jul 22 16:08 mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar##安装Mysql使用rpm安装包安装Mysql无需事先创建mysql用户和mysql用户组，安装的初始化过程程序会自动创建mysql的用户和用户组，这个自动创建的用户不允许使用shell等方式登录，其内部的创建命令如下123#无需创建用户和组shell&gt; groupadd mysqlshell&gt; useradd -r -g mysql -s /bin/false mysql安装前需要先检测系统里是否存在系统里是否已存在mysql,如果有需要先卸载12rpm -qa |grep mysqlyum remove mysql-community-libs-5.7.19-1.el7.x86_64此外还需使用删除机器上所有有关mysql的库文件（通常是mariadb的依赖库）使用find / -name mysql查找是否存在依赖库，使用yum remove mysql-libs删除依赖库123456[root@bdas1 mysql]# find / -name mysql/usr/lib64/mysql/usr/share/mysql/opt/mysql[root@bdas1 ~]# yum remove mysql-libs[root@bdas1 ~]# find / -name mysql通常来说只需安装四个rpm包即可，四个rpm是存在依赖的，因此需要按顺序安装1234rpm -ivh mysql-community-common-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-libs-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-client-5.7.19-1.el7.x86_64.rpmrpm -ivh mysql-community-server-5.7.19-1.el7.x86_64.rpm##初始化##mysql环境1、使用 –initialize参数 初始化时生成随机root密码,密码在/var/log/mysqld.log 日志文件中1234mysqld --initialize --user=mysqlsystemctl start mysqldmysql -u root -p (输入/var/log/mysqld.log文件中的密码)mysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;新密码&apos;;2、使用–initialize-insecure参数，初始化时不产生随机密码，之后再创建密码1234mysqld --initialize-insecure --user=mysqlsystemctl start mysqldmysql -u root --skip-passwordmysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;新密码&apos;;启动mysql数据库：Centos7启动系统服务的密令格式，相对Centos6有些不同，123456789#Centos 7systemctl start mysqldsystemctl stop mysqldsystemctl status mysqld#Centos 6service mysqld startservice mysqld stopservice mysqld status检测是否启动12345[root@bdas1 mysql]# netstat -ntlp | grep 3306tcp6 0 0 :::3306 :::* LISTEN 4692/mysqld [root@bdas1 sbin]# ps -ef|grep mysqlmysql 1593 1 0 21:25 ? 00:00:01 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pidroot 2775 2686 0 22:18 pts/0 00:00:00 grep --color=auto mysql修改Mysql数控datedir目录1、修改/etc/sysconfig/selinux将SELINUX的值修改为disabled （需要重启）123456# This file controls the state of SELinux on the system.# SELINUX= can take one of these three values:# enforcing - SELinux security policy is enforced.# permissive - SELinux prints warnings instead of enforcing.# disabled - No SELinux policy is loaded.SELINUX=disabled2、vi /etc/my.cnf修改datedir和socket123456789#datadir=/var/lib/mysql#socket=/var/lib/mysql/mysql.sockdatadir=/appdata/mysqlsocket=/appdata/mysql/mysql.sock#此外还需修改[client]的socket配置路径[client]socket=/appdata/mysql/mysql.sock3、将源datadir的目录拷贝到修改后的目的目录，并修改目录权限，最后建链接1234cp -rf /var/lib/mysql /appdata/mysqlcd /appdatachown -R mysql mysqlchgrp -R mysql mysql4、测试是否修改成功12systemctl start mysqldmysql -u root -p错误1：第一步中修改/etc/sysconfig/selinux文件中的SELINUX，没有重启，重启即可，日志信息如下12345678910111213141516171819[root@bdas1 appdata]# systemctl start mysqldJob for mysqld.service failed because the control process exited with error code. See &quot;systemctl status mysqld.service&quot; and &quot;journalctl -xe&quot; for details.[root@bdas1 appdata]# systemctl status mysqld.service● mysqld.service - MySQL Server Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled) Active: failed (Result: start-limit) since Sat 2017-07-22 23:22:56 CST; 5s ago Docs: man:mysqld(8) ....而且/var/log/mysqld.log文件错误如下2017-07-22T13:06:03.966795Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().2017-07-22T13:06:03.977001Z 0 [ERROR] InnoDB: Operating system error number 13 in a file operation.2017-07-22T13:06:03.977025Z 0 [ERROR] InnoDB: The error means mysqld does not have the access rights to the directory.2017-07-22T13:06:03.977028Z 0 [ERROR] InnoDB: os_file_get_status() failed on &apos;./ibdata1&apos;. Can&apos;t determine file permissions2017-07-22T13:06:03.977032Z 0 [ERROR] InnoDB: Plugin initialization aborted with error Generic error2017-07-22T13:06:04.585249Z 0 [ERROR] Plugin &apos;InnoDB&apos; init function returned error.2017-07-22T13:06:04.585284Z 0 [ERROR] Plugin &apos;InnoDB&apos; registration as a STORAGE ENGINE failed.2017-07-22T13:06:04.585290Z 0 [ERROR] Failed to initialize plugins.错误2：systemctl start mysqld命令正确执行，但是mysql登录报错，且日志如下12345678910[root@bdas1 sbin]# mysqlERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/var/lib/mysql/mysql.sock&apos; (2)解决方式有两种，推荐使用方式一1、增加clinet的socket目录设置，vi /etc/my.cnf，在文件末尾增加如下内容即可,须重启[client]socket=/appdata/mysql/mysql.sock2、建立链接ln -s /appdata/mysql/mysql.sock /var/lib/mysql/即可对于为什么需要建立链接不太清楚]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>Centos7,Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客搭建过程随手笔记]]></title>
    <url>%2Flogs%2Fblog_build%2F</url>
    <content type="text"><![CDATA[个人博客的搭建日志，记录博客搭建过程的中的一些心得，由衷感谢Grok的博客对我的指导。系统环境开发平台：Windows开发工具：Hexo博客主题：NextHexo 环境搭建搭建过程主要参考 Grok的博客知行合一 | 用 Hexo 搭建博客Hexo 搭建博客教程补遗主要步骤如下：1、git工具安装2、wget工具安装将下载的wget.exe文件放入 C:\Windows\System32 目录即可使用wget密令3、node.js工具安装4、Hexo工具安装实用工具 npm install -g cnpm –registry=https://registry.npm.taobao.org安装模块时只要用 cnpm 替换 npm 即可，会直接从淘宝 NPM 安装，安装命令形如：cnpm install [name]Hexo 博客压缩优化Hexo主程序并不对生成的页面进行优化，致使页面内容稀疏，由于网面大小的会直接影响网页打开的速度，因此对页面进行压缩是有必要的。简单来说有两种可选方式进行生成网页的压缩优化。方式一：使用gulp插件，自行编写优化脚本，如hexo博客－性能优化方式二：使用Hexo软件的配套插件，如：hexo-neat 、hexo-all-minifier、hexo-filter-cleanup本博客采用的是hexo-neat插件1、插件有两种下载方式方式一：使用密令行1$ npm install hexo-neat --save方式二：登录插件的commit分支页面（如hexo-neat），手工下插件并将其解压到 “blog根目录\node_modules” 目录下, 注意插件前缀是”hexo-…”2、下载完插件后，修改站点的配置文件 _config.yml ,加入相关的压缩配置12345678910111213141516## Hexo-neat configneat_enable: trueneat_html: enable: true exclude:neat_css: enable: true exclude: - '*.min.css'neat_js: enable: true mangle: true output: compress: exclude: - '*.min.js'值得注意的是：由于Hexo版本升级等原因，在插件的使用说明里并没有说明需要在配置文件里 package.json 增加插件依赖如下增加了”hexo-neat”: “^1.0.4”,依赖项1234567891011121314 "dependencies": &#123; "hexo": "^3.2.0", "hexo-deployer-git": "^0.3.0", "hexo-generator-archive": "^0.1.4", "hexo-generator-category": "^0.1.3", "hexo-generator-index": "^0.2.1", "hexo-generator-tag": "^0.2.0", "hexo-neat": "^1.0.4", "hexo-renderer-ejs": "^0.2.0", "hexo-renderer-marked": "^0.2.10", "hexo-renderer-stylus": "^0.3.1", "hexo-server": "^0.2.0", "stream-to-array": "^2.3.0"&#125;如果增加依赖后，使用 hexo generate 指令生成页面时报错找不到 stream-to-array 等依赖，使用cnpm直接安装即可1$ cnpm install stream-to-array --savegit管理博客使用git工具对blog文件进行管理有两个必要性其一：当修改博客出错时可以用来恢复。其二：使用 hexo deploy 发布的博客，有许多内容并不会上传到github上面，而仅仅存储在本地，因此只能在同一台主机上编辑博客。使用git管理博客步骤如下：由于hexo也是使用git工具进行部署的，因此如果在博客根目录下使用 git init 来创建Repository，会和hexo创建的Repository发生冲突，因此可采用 父-子 目录的方式进行规避，将Hexo创建的博客作为子目录，至于git管理的父目录下，结构示意如下：123456789101112+--myblog #git 文件管理目录| || + --blog #Hexo 博客目录| | || | source| | _config.yml| | ...| || + --.git #git参数文件| | || | index| |1、打开git bush，进入git根目录/myblog执行git init1$ git init2、修改博客根目录下的 myblog/bolg/.gitignore 文件，仅保留public/，该文件是hexo生成的博客页面文件，不必要使用git管理（经过测试，这个步不做也是可行的）1234567#.DS_Store#Thumbs.db#db.json#*.log#node_modules/public/#.deploy_git/3、使用git add . 添加所有文件，如果 git 报错 Filename too long ，执行 git config –global core.longpaths true 修改git配置即可，如果有依赖文件目录添加失败，检查该目录下是否存在 .git文件夹，如果存在则说明该目录下的文件是属于另外一个repository仓库的，一种可行的解决方式是直接删除该目录，登录github直接下载该依赖文件，将其替换掉即可。（凡是使用 git clone https://github.com/iissnan/hexo-theme-next themes/next 等密令下载的插件都包含 .git文件夹，均需登录 githut 直接下压缩包文件进行替换）4、使用git commit -m “first commmit”计较5、登录github，为博客的源文件创建一个空的仓库，按照github提示，将文件上传到github5、其他主机登录步骤一：搭建好Hexo环境，创建博客根目录二：使用git使用git clone https://github.com/xxx/myblog.git 命令下载git上传的文件即可。注意：整个过程都无需再次使用 hexo init 指令，来初始化文件夹，安装好hexo后只需执行 npm install 密令安装来安装hexo serverMarkdown 编辑工具Typora由于Hexo不能够在页面上实时显示正在编写的文档，每次查看编写效果都需要执行如下指令，繁琐而不直观。123$ hexo clean$ hexo generate$ hexo serverHexo 页面底部注释由hexo的模板自动生成的页面，在底部默认会有版权和主体的注释，如图：容易暴露个人智商，作为强迫症患者，简直无法忍受。经过查找，底框代码是在： blog\themes\next\layout\_partials\ 目录下的footer.swig文件里说明的，修改文件内容如下：1234567891011121314&lt;div class=&quot;copyright&quot; &gt; &#123;% set current = date(Date.now(), &quot;YYYY&quot;) %&#125; &amp;copy; &#123;% if theme.since and theme.since != current %&#125; &lt;i&gt; &#123;&#123; theme.since &#125;&#125; - &lt;\i&gt; &#123;% endif %&#125; &lt;span itemprop=&quot;copyrightYear&quot;&gt;&lt;i&gt;&#123;&#123; current &#125;&#125;&lt;/i&gt;&lt;/span&gt; &lt;span class=&quot;with-love&quot;&gt; &lt;i class=&quot;fa fa-&#123;&#123; theme.authoricon &#125;&#125;&quot;&gt; &lt;/i&gt; &lt;/span&gt; &lt;span class=&quot;author&quot; itemprop=&quot;copyrightHolder&quot;&gt; &lt;i&gt;Powered By - &#123;&#123; config.author &#125;&#125; &lt;/i&gt; &lt;/span&gt;&lt;/div&gt;&#123;% if theme.copyright %&#125;&lt;div class=&quot;copyright&quot;&gt; &lt;i&gt;Contact Me&amp;nbsp&amp;nbsp&amp;nbsp|&amp;nbsp&amp;nbsp&amp;nbsp&lt;/i&gt; &lt;i&gt;&lt;a target=&quot;_blank&quot; rel=&quot;external&quot; href=&quot;https://github.com/timior&quot;&gt;https://github.com/timior&lt;/a&gt;&lt;/i&gt;&lt;/div&gt;&#123;% endif %&#125;额外添加标签，让其显示为斜体字，在 “|” 字符两边添加多个&amp;nbsp，插入空格让其看上去更加简洁，最后显示效果如下:评论系统插件Hexo的Neat主体里面已经集成了几种评论工具插件，个人先尝试了网易云跟帖，整体感觉并不好，因为网易留言回复采用的是”楼上楼“方式，可经过几轮回复留言区会变得一片混乱，跟本找不到谁是谁的留言，之后尝试了来必力，使用感觉还不错，留言回复采用的是“楼中楼”方式，直观清晰，具体可浏览本博客的留言区域。不过有个缺点，这个插件貌似不支持留言导入导出的功能，这意味着，一旦上了船就别想再跑了，此外这个插件是韩国的，我电脑所在电信网络，注册登录总是出现出现网络故障，无赖最后使用手机网络来注册登录，感觉手机网络还是很给力的。博客图床-七牛云由于博客托管在github上面，加载速度本来就慢，如果还需加载大量的图片，那就更加无法忍受了，所以图床是必须要有的，见大家都推荐使用七牛云，尝试了下，加载速度还不错，步骤如下：一：注册七牛云，新建对象存储空间二：进入存储空间-内容管理-上传文件在右边可以添加文件的前缀（先填写右侧的文件路径，再添加文件，就会给文件自动加上前缀）三：图片的使用七牛云上上传的图片，可以在页面里直接使用，无需添加任何设置，复制图片路径，哪里要引用就粘哪，在Hexo的markdown里引用方式之一：![](粘入复制的链接)To be Continued…]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>Hexo,github</tag>
      </tags>
  </entry>
</search>